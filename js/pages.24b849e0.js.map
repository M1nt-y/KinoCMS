{"version":3,"file":"js/pages.24b849e0.js","mappings":"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","sources":["webpack://kino-cms/./node_modules/vue-loader/dist/exportHelper.js","webpack://kino-cms/./src/stores/pages.js","webpack://kino-cms/./src/pages/admin/AdminPages.vue","webpack://kino-cms/./src/pages/admin/AdminPages.vue?02f3"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import {defineStore} from 'pinia';\r\nimport {db, storage} from \"@/firebase/firebase\";\r\nimport {collection, deleteDoc, doc, getDocs, setDoc} from \"firebase/firestore\";\r\nimport {deleteObject, getDownloadURL, ref, uploadBytes} from \"firebase/storage\";\r\n// import {useCinemaStore} from \"@/stores/cinemas\";\r\n\r\n\r\n// const cinemaStore = useCinemaStore();\r\n\r\nexport const usePagesStore = defineStore({\r\n    id: \"Pages\",\r\n    state: () => ({\r\n        loading: false,\r\n        pagesList: [],\r\n        showModal: false,\r\n        uploaded: false\r\n    }),\r\n    actions: {\r\n        async getPages() {\r\n            this.loading = true;\r\n            this.pagesList = [];\r\n            const pagesData = await getDocs(collection(db, 'pages'));\r\n            // get pages data\r\n            pagesData.forEach((doc) => {\r\n                if (doc.id.includes('contacts') || doc.id.includes('home') || doc.id.includes('movies') || doc.id.includes('schedule') || doc.id.includes('upcoming') || doc.id.includes('cinemas') || doc.id.includes('specials') || doc.id.includes('news')) {\r\n                    this.pagesList.push({\r\n                        id: this.pagesList.length,\r\n                        name: doc.id,\r\n                        uploaded: true,\r\n                        creationDate: doc.data().creationDate,\r\n                        status: doc.data().status,\r\n                        language: doc.data().language,\r\n                        routeName: doc.data().routeName,\r\n                        data: doc.data().data,\r\n                    });\r\n                }\r\n                else {\r\n                    this.pagesList.push({\r\n                        id: this.pagesList.length,\r\n                        name: doc.id,\r\n                        uploaded: true,\r\n                        creationDate: doc.data().creationDate,\r\n                        status: doc.data().status,\r\n                        language: doc.data().language,\r\n                        routeName: doc.data().routeName,\r\n                        data: doc.data().data,\r\n                        images: [\r\n                            {\r\n                                main: {\r\n                                    name: doc.data().data[0].main.name,\r\n                                    image: null,\r\n                                    url: doc.data().data[0].main.url,\r\n                                    uploaded: true\r\n                                },\r\n                                gallery: [],\r\n                                deleted: []\r\n                            },\r\n                            {\r\n                                main: {\r\n                                    name: doc.data().data[1].main.name,\r\n                                    image: null,\r\n                                    url: doc.data().data[1].main.url,\r\n                                    uploaded: true\r\n                                },\r\n                                gallery: [],\r\n                                deleted: []\r\n                            }\r\n                        ]\r\n                    });\r\n                }\r\n            });\r\n            this.pagesList.forEach((page) => {\r\n                if (!page.name.includes('page')) {\r\n                    page.id = 'default';\r\n                }\r\n                for (let i = 0; i < page.data.length; i++) {\r\n                    // get cinemas for contacts page\r\n                    // if (page.name.includes('contacts')) {\r\n                    //     if (cinemaStore.cinemaList.length > 0) {\r\n                    //         for (let j = 0; j < cinemaStore.cinemaList.length; j++) {\r\n                    //             page.data[i].cinemas.push({\r\n                    //                 name: cinemaStore.cinemaList[j].name,\r\n                    //                 address: '',\r\n                    //                 coordinate: ''\r\n                    //             });\r\n                    //         }\r\n                    //         // remove dublicates\r\n                    //         const uniqueNames = [];\r\n                    //         page.data[i].cinemas = page.data[i].cinemas.filter(element => {\r\n                    //             const isDuplicate = uniqueNames.includes(element.name);\r\n                    //             if (!isDuplicate) {\r\n                    //                 uniqueNames.push(element.name);\r\n                    //                 return true;\r\n                    //             }\r\n                    //             return false;\r\n                    //         });\r\n                    //         // check if cinemas were deleted\r\n                    //         let result = page.data[i].cinemas.filter(o1 => !cinemaStore.cinemaList.some(o2 => o1.name === o2.name));\r\n                    //         for (let j = 0; j < page.data[i].cinemas.length; j++) {\r\n                    //             if (result.length > 0) {\r\n                    //                 for (let k = 0; k < result.length; k++) {\r\n                    //                     if (page.data[i].cinemas[j].name === result[k].name) {\r\n                    //                         page.data[i].cinemas.splice(j, 1);\r\n                    //                     }\r\n                    //                 }\r\n                    //             }\r\n                    //         }\r\n                    //     }\r\n                    //     else {\r\n                    //         page.data[i].cinemas = [];\r\n                    //     }\r\n                    // }\r\n                    // get pages gallery\r\n                    if (page.data[i].gallery) {\r\n                        for (let j = 0; j < page.data[i].gallery.length; j++) {\r\n                            page.images[i].gallery.push({\r\n                                id: page.images[i].gallery.length,\r\n                                name: page.data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: page.data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        async deletePage(id) {\r\n            this.showModal = false;\r\n            this.loading = true;\r\n            if (this.pagesList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"pages\", this.pagesList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.pagesList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.pagesList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'pages/main/' + this.pagesList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.pagesList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'pages/gallery/' + this.pagesList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.pagesList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'pages/gallery/' + this.pagesList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.pagesList.splice(id, 1);\r\n            for (let i = 0; i < this.pagesList.length; i++) {\r\n                if (this.pagesList[i].id !== i && this.pagesList[i].id !== 'default') {\r\n                    this.pagesList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadPage(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            // upload pages images\r\n            if (this.pagesList[id].images) {\r\n                for (let i = 0; i < this.pagesList[id].images.length; i++) {\r\n                    // upload main image (update if was changed)\r\n                    if (this.pagesList[id].images[i].main.image !== null) {\r\n                        try {\r\n                            const mainRef = ref(storage, \"pages/main/\" + this.pagesList[id].images[i].main.name);\r\n                            await uploadBytes(mainRef, this.pagesList[id].images[i].main.image).then(async () => {\r\n                                await getDownloadURL(mainRef).then((url) => {\r\n                                    this.pagesList[id].data[i].main.url = url;\r\n                                });\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(\"Error uploading image: \", e);\r\n                        }\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.pagesList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, \"pages/gallery/\" + this.pagesList[id].images[i].deleted[j]);\r\n                            await deleteObject(delRef).then(() => {\r\n                                this.pagesList[id].images[i].deleted.splice(j, 1);\r\n                            }).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    // upload images from gallery\r\n                    if (this.pagesList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].gallery.length; j++) {\r\n                            if (this.pagesList[id].images[i].gallery[j].image !== null) {\r\n                                try {\r\n                                    const galleryRef = ref(storage, \"pages/gallery/\" + this.pagesList[id].images[i].gallery[j].name);\r\n                                    await uploadBytes(galleryRef, this.pagesList[id].images[i].gallery[j].image).then(async () => {\r\n                                        await getDownloadURL(galleryRef).then((url) => {\r\n                                            this.pagesList[id].data[i].gallery[j].url = url;\r\n                                        });\r\n                                    });\r\n                                } catch (e) {\r\n                                    console.error(\"Error uploading image: \", e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < this.pagesList[id].data.length; i++) {\r\n                    for (let j = 0; j < this.pagesList[id].data[i].gallery.length; j++) {\r\n                        if (this.pagesList[id].data[i].gallery[j].url !== null && j === this.pagesList[id].data[i].gallery.length-1 && i === this.pagesList[id].data.length-1) {\r\n                            this.uploadPageData(id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.uploadPageData(id);\r\n            }\r\n        },\r\n        async uploadPageData(id) {\r\n            const docData = {\r\n                creationDate: this.pagesList[id].creationDate,\r\n                routeName: this.pagesList[id].routeName,\r\n                status: this.pagesList[id].status,\r\n                language: this.pagesList[id].language,\r\n                data: this.pagesList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"pages\", this.pagesList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        }\r\n    }\r\n})","<template>\r\n  <div class=\"pages\">\r\n    <TheLoading v-show=\"pagesStore.loading\" />\r\n    <h2>List of pages</h2>\r\n    <ItemList\r\n        status\r\n        :route-name=\"'AdminPage'\"\r\n        :items=\"pagesStore.pagesList\"\r\n        :show-modal=\"pagesStore.showModal\"\r\n        @addItem=\"addPage\"\r\n        @toggleModal=\"pagesStore.showModal = true\"\r\n        @closeModal=\"pagesStore.showModal = false\"\r\n        @deleteItem=\"pagesStore.deletePage\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {usePagesStore} from \"@/stores/pages\";\r\nimport TheLoading from \"@/components/admin/TheLoading\";\r\nimport ItemList from \"@/components/admin/ItemList\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst router = useRouter()\r\n\r\nconst pagesStore = usePagesStore();\r\n\r\npagesStore.getPages();\r\n\r\nfunction addPage() {\r\n  pagesStore.pagesList.push({\r\n    id: pagesStore.pagesList.length,\r\n    name: 'page-' + Date.now(),\r\n    creationDate: Date.now(),\r\n    uploaded: false,\r\n    status: false,\r\n    language: {\r\n      selected: 'en',\r\n      index: 0\r\n    },\r\n    routeName: '',\r\n    data: [\r\n      {\r\n        title: '',\r\n        description: '',\r\n        main: {\r\n          name: null,\r\n          url: null\r\n        },\r\n        gallery: [],\r\n        seo: {\r\n          url: '',\r\n          title: '',\r\n          keywords: '',\r\n          description: ''\r\n        },\r\n      },\r\n      {\r\n        title: '',\r\n        description: '',\r\n        main: {\r\n          name: null,\r\n          url: null\r\n        },\r\n        gallery: [],\r\n        seo: {\r\n          url: '',\r\n          title: '',\r\n          keywords: '',\r\n          description: ''\r\n        },\r\n      }\r\n    ],\r\n    images: [\r\n      {\r\n        main: {\r\n          name: null,\r\n          image: null,\r\n          url: null,\r\n          uploaded: false\r\n        },\r\n        gallery: [],\r\n        deleted: []\r\n      },\r\n      {\r\n        main: {\r\n          name: null,\r\n          image: null,\r\n          url: null,\r\n          uploaded: false\r\n        },\r\n        gallery: [],\r\n        deleted: []\r\n      }\r\n    ]\r\n  });\r\n  router.push({\r\n    name: 'AdminPage',\r\n    params: {\r\n      id: pagesStore.pagesList.length-1,\r\n      parent: 0\r\n    }\r\n  });\r\n}\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AdminPages\",\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pages {\r\n  padding: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n</style>","import script from \"./AdminPages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminPages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AdminPages.vue?vue&type=style&index=0&id=06818b98&scoped=true&lang=css\"\n\nimport exportComponent from \"S:\\\\Projects\\\\kino-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-06818b98\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","usePagesStore","defineStore","id","state","loading","pagesList","showModal","uploaded","actions","async","this","pagesData","getDocs","collection","db","forEach","doc","includes","push","length","name","creationDate","data","status","language","routeName","images","main","image","url","gallery","deleted","page","i","j","deleteDoc","delRef","ref","storage","deleteObject","catch","error","console","splice","mainRef","uploadBytes","then","getDownloadURL","e","galleryRef","uploadPageData","docData","setDoc","router","useRouter","pagesStore","addPage","Date","now","selected","index","title","description","seo","keywords","params","parent","getPages","__exports__"],"sourceRoot":""}