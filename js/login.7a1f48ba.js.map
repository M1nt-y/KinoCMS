{"version":3,"file":"js/login.7a1f48ba.js","mappings":"2GAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,uFCJV,MAAMI,GAAeC,EAAAA,EAAAA,IAAY,CACpCC,GAAI,OACJC,MAAO,KAAM,CACTC,UAAU,EACVC,gBAAiB,CACbC,SAAU,KACVC,MAAO,KAGfC,QAAS,CACLC,aACIC,KAAKN,UAAYM,KAAKN,QAC1B,EACAO,iBAAiBT,GACb,MAAMU,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,UAAW,SAAWZ,GACvCa,QAAgBC,EAAAA,EAAAA,IAAOJ,GAC7B,OAAIG,EAAQE,SACDF,EAAQG,YAEf,CAER,EACAP,oBAAoBT,EAAIgB,GACpB,MAAMC,EAAUC,OAAOC,OAAO,CAAC,EAAGH,SAC5BI,EAAAA,EAAAA,KAAOT,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,UAAW,SAAWZ,GAAKiB,EACpD,I,+4BC8DR,EAAe,CACbI,KAAM,a,gCAlCR,MAAMC,GAAYC,EAAAA,EAAAA,KACZC,GAAY1B,EAAAA,EAAAA,KACZ2B,GAASC,EAAAA,EAAAA,OACT,OAAEC,IAAWC,EAAAA,EAAAA,MAEnB,SAASC,IACPP,EAAUQ,OACZ,CAEA,SAASC,IACoC,OAAvCP,EAAUrB,gBAAgBC,UAC5BuB,EAAOK,MAAQR,EAAUrB,gBAAgBC,SAAW,KACpDoB,EAAUrB,gBAAgBE,MAAQ,IAGlCsB,EAAOK,MAAQR,EAAUrB,gBAAgBC,SAAW,KACpDoB,EAAUrB,gBAAgBE,MAAQ,GAEpC4B,aAAaC,QAAQ,cAAeV,EAAUrB,gBAAgBC,SAChE,C,OAEA+B,EAAAA,EAAAA,KAAM,IAAMb,EAAUc,cAAcJ,IACpB,OAAVA,IACFV,EAAUe,aAAe,GACzBZ,EAAOa,KAAK,KACd,KAEFC,EAAAA,EAAAA,KAAgB,KACdjB,EAAUe,aAAe,EAAE,I,myCCjF7B,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://kino-cms/./node_modules/vue-loader/dist/exportHelper.js","webpack://kino-cms/./src/stores/main.js","webpack://kino-cms/./src/pages/LoginPage.vue","webpack://kino-cms/./src/pages/LoginPage.vue?3607"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineStore } from 'pinia';\r\nimport {doc, getDoc, setDoc} from \"firebase/firestore\";\r\nimport {db} from \"@/firebase/firebase\";\r\n\r\n\r\nexport const useMainStore = defineStore({\r\n    id: \"Main\",\r\n    state: () => ({\r\n        isActive: false,\r\n        currentLanguage: {\r\n            selected: 'en',\r\n            index: 0\r\n        },\r\n    }),\r\n    actions: {\r\n        toggleMenu() {\r\n            this.isActive = !this.isActive;\r\n        },\r\n        async getBooking(id) {\r\n            const docRef = doc(db, \"booking\", \"event-\" + id);\r\n            const docSnap = await getDoc(docRef);\r\n            if (docSnap.exists()) {\r\n                return docSnap.data();\r\n            } else {\r\n                return undefined\r\n            }\r\n        },\r\n        async updateBooking(id, data) {\r\n            const docData = Object.assign({}, data);\r\n            await setDoc(doc(db, \"booking\", 'event-' + id), docData);\r\n        }\r\n    }\r\n});","<template>\r\n  <div class=\"login-page\">\r\n    <div class=\"login-box\">\r\n      <div class=\"card card-outline card-primary\">\r\n        <div class=\"card-header text-center\">\r\n          <router-link to=\"/\" class=\"h1\">\r\n            {{ $t('loginPage.title') }}\r\n          </router-link>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <p class=\"login-box-msg\">{{ $t('loginPage.start') }}</p>\r\n          <div class=\"input-group mb-3\">\r\n            <input type=\"email\" class=\"form-control\" :placeholder=\"$t('placeholders.email')\" v-model=\"authStore.authEmail\">\r\n            <div class=\"input-group-append\">\r\n              <div class=\"input-group-text\">\r\n                <span class=\"fas fa-envelope\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"input-group mb-3\">\r\n            <input type=\"password\" class=\"form-control\" :placeholder=\"$t('placeholders.password')\" v-model=\"authStore.authPassword\">\r\n            <div class=\"input-group-append\">\r\n              <div class=\"input-group-text\">\r\n                <span class=\"fas fa-lock\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p class=\"mb-3 text-center error-message\" v-if=\"authStore.errorMessage\">{{ authStore.errorMessage }}</p>\r\n          <div class=\"row justify-content-end mb-3\">\r\n            <div class=\"col-4\">\r\n              <button class=\"btn btn-primary btn-block\" @click=\"signIn\">{{ $t('loginPage.button') }}</button>\r\n            </div>\r\n          </div>\r\n          <p class=\"mb-3 text-center\">\r\n            {{ $t('loginPage.notmember') }}<router-link to=\"/register\">{{ $t('loginPage.signup') }}</router-link>\r\n          </p>\r\n\r\n          <p class=\"mb-0 text-center lang\" @click=\"changeLanguage\">\r\n            {{ $t('changeLanguage') }}\r\n          </p>\r\n\r\n<!--          <p class=\"mb-1\">-->\r\n<!--            <a href=\"forgot-password.html\">I forgot my password</a>-->\r\n<!--          </p>-->\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useAuthStore } from \"@/stores/auth\";\r\nimport { useMainStore } from \"@/stores/main\";\r\nimport { onBeforeUnmount, watch } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useI18n } from \"vue-i18n\";\r\n\r\n\r\nconst authStore = useAuthStore();\r\nconst mainStore = useMainStore();\r\nconst router = useRouter();\r\nconst { locale } = useI18n();\r\n\r\nfunction signIn() {\r\n  authStore.login();\r\n}\r\n\r\nfunction changeLanguage() {\r\n  if (mainStore.currentLanguage.selected === 'en') {\r\n    locale.value = mainStore.currentLanguage.selected = 'ua';\r\n    mainStore.currentLanguage.index = 1;\r\n  }\r\n  else {\r\n    locale.value = mainStore.currentLanguage.selected = 'en';\r\n    mainStore.currentLanguage.index = 0;\r\n  }\r\n  localStorage.setItem('user-locale', mainStore.currentLanguage.selected);\r\n}\r\n\r\nwatch(() => authStore.currentUser, (value) => {\r\n  if (value !== null) {\r\n    authStore.errorMessage = '';\r\n    router.push('/');\r\n  }\r\n});\r\nonBeforeUnmount(() => {\r\n  authStore.errorMessage = '';\r\n});\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"LoginPage\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-page {\r\n  color: #121212;\r\n}\r\n.error-message {\r\n  color: red;\r\n}\r\n.lang {\r\n  cursor: pointer;\r\n}\r\n</style>","import script from \"./LoginPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoginPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LoginPage.vue?vue&type=style&index=0&id=0b765ac6&scoped=true&lang=css\"\n\nimport exportComponent from \"S:\\\\Projects\\\\kino-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0b765ac6\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","useMainStore","defineStore","id","state","isActive","currentLanguage","selected","index","actions","toggleMenu","this","async","docRef","doc","db","docSnap","getDoc","exists","data","docData","Object","assign","setDoc","name","authStore","useAuthStore","mainStore","router","useRouter","locale","useI18n","signIn","login","changeLanguage","value","localStorage","setItem","watch","currentUser","errorMessage","push","onBeforeUnmount","__exports__"],"sourceRoot":""}