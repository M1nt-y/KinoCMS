{"version":3,"file":"js/booking.dba98330.js","mappings":"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","sources":["webpack://kino-cms/./src/stores/main.js","webpack://kino-cms/./src/stores/movies.js","webpack://kino-cms/./src/stores/schedule.js","webpack://kino-cms/./src/pages/BookingPage.vue","webpack://kino-cms/./src/pages/BookingPage.vue?ba4d"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport {doc, getDoc, setDoc} from \"firebase/firestore\";\r\nimport {db} from \"@/firebase/firebase\";\r\n\r\n\r\nexport const useMainStore = defineStore({\r\n    id: \"Main\",\r\n    state: () => ({\r\n        isActive: false,\r\n        currentLanguage: {\r\n            selected: 'en',\r\n            index: 0\r\n        },\r\n    }),\r\n    actions: {\r\n        toggleMenu() {\r\n            this.isActive = !this.isActive;\r\n        },\r\n        async getBooking(id) {\r\n            const docRef = doc(db, \"booking\", \"event-\" + id);\r\n            const docSnap = await getDoc(docRef);\r\n            if (docSnap.exists()) {\r\n                return docSnap.data();\r\n            } else {\r\n                return undefined\r\n            }\r\n        },\r\n        async updateBooking(id, data) {\r\n            const docData = Object.assign({}, data);\r\n            await setDoc(doc(db, \"booking\", 'event-' + id), docData);\r\n        }\r\n    }\r\n});","import { defineStore } from 'pinia'\r\nimport { deleteObject, getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { db, storage } from \"@/firebase/firebase\";\r\nimport { collection, doc, getDocs, getDoc, setDoc, deleteDoc } from \"firebase/firestore\";\r\n\r\nexport const useMovieStore = defineStore({\r\n    id: 'Movies',\r\n    state: () => ({\r\n        movieList: [],\r\n        upcomingList: [],\r\n        loading: false,\r\n        showModal: false,\r\n        showUpcomingModal: false,\r\n        uploaded: false\r\n    }),\r\n    actions: {\r\n        async getMovies() {\r\n            this.movieList = [];\r\n            this.loading = true;\r\n            const moviesData = await getDocs(collection(db, 'movies'));\r\n            // get movies data\r\n            moviesData.forEach((doc) => {\r\n                this.movieList.push({\r\n                    id: this.movieList.length,\r\n                    name: doc.id,\r\n                    uploaded: true,\r\n                    language: doc.data().language,\r\n                    data: doc.data().data,\r\n                    images: [\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[0].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[0].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        },\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[1].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[1].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n            // get movies gallery\r\n            this.movieList.forEach((movie) => {\r\n                for (let i = 0; i < movie.data.length; i++) {\r\n                    for (let j = 0; j < movie.data[i].gallery.length; j++) {\r\n                        movie.images[i].gallery.push({\r\n                            id: movie.images[i].gallery.length,\r\n                            name: movie.data[i].gallery[j].name,\r\n                            uploaded: true,\r\n                            image: null,\r\n                            url: movie.data[i].gallery[j].url\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        addMovie(movie) {\r\n            this.movieList.push(movie);\r\n        },\r\n        async deleteMovie(id) {\r\n            this.showModal = false;\r\n            this.loading = true;\r\n            if (this.movieList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"movies\", this.movieList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.movieList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'movies/main/' + this.movieList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.movieList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.movieList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'movies/gallery/' + this.movieList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.movieList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.movieList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'movies/gallery/' + this.movieList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.movieList.splice(id, 1);\r\n            for (let i = 0; i < this.movieList.length; i++) {\r\n                if (this.movieList[i].id !== i) {\r\n                    this.movieList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadMovie(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                // upload main image (update if was changed)\r\n                if (this.movieList[id].images[i].main.image !== null) {\r\n                    try {\r\n                        const mainImageRef = ref(storage, \"movies/main/\" + this.movieList[id].images[i].main.name);\r\n                        await uploadBytes(mainImageRef, this.movieList[id].images[i].main.image).then(async () => {\r\n                            await getDownloadURL(mainImageRef).then((url) => {\r\n                                this.movieList[id].data[i].main.url = url;\r\n                            });\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(\"Error uploading image: \", e);\r\n                    }\r\n                }\r\n                // delete images from gallery\r\n                if (this.movieList[id].images[i].deleted.length !== 0) {\r\n                    for (let j = 0; j < this.movieList[id].images[i].deleted.length; j++) {\r\n                        const delRef = ref(storage, \"movies/gallery/\" + this.movieList[id].images[i].deleted[j]);\r\n                        await deleteObject(delRef).then(() => {\r\n                            this.movieList[id].images[i].deleted.splice(j, 1);\r\n                        }).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                }\r\n                // upload images\r\n                if (this.movieList[id].images[i].gallery.length) {\r\n                    for (let j = 0; j < this.movieList[id].images[i].gallery.length; j++) {\r\n                        if (this.movieList[id].images[i].gallery[j].image !== null) {\r\n                            try {\r\n                                const galleryRef = ref(storage, \"movies/gallery/\" + this.movieList[id].images[i].gallery[j].name);\r\n                                await uploadBytes(galleryRef, this.movieList[id].images[i].gallery[j].image).then(async () => {\r\n                                    await getDownloadURL(galleryRef).then((url) => {\r\n                                        this.movieList[id].data[i].gallery[j].url = url;\r\n                                    });\r\n                                });\r\n                            } catch (e) {\r\n                                console.error(\"Error uploading image: \", e);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.movieList[id].data.length; i++) {\r\n                for (let j = 0; j < this.movieList[id].data[i].gallery.length; j++) {\r\n                    if (this.movieList[id].data[i].gallery[j].url !== null && j === this.movieList[id].data[i].gallery.length-1 && i === this.movieList[id].data.length-1) {\r\n                        this.uploadMovieData(id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async uploadMovieData(id) {\r\n            const docData = {\r\n                language: this.movieList[id].language,\r\n                data: this.movieList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"movies\", this.movieList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        },\r\n        async resetMovie(id) {\r\n            this.loading = true;\r\n            if (this.movieList[id].uploaded) {\r\n                for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                    this.movieList[id].images[i].main.name = null;\r\n                    this.movieList[id].images[i].main.image = null;\r\n                    this.movieList[id].images[i].main.url = null;\r\n                    this.movieList[id].images[i].gallery = [];\r\n                    this.movieList[id].images[i].deleted = [];\r\n                }\r\n                const docRef = doc(db, \"movies\", this.movieList[id].name);\r\n                // get movie data\r\n                const docSnap = await getDoc(docRef);\r\n                if (docSnap.exists()) {\r\n                    this.movieList[id].data = docSnap.data().data;\r\n                    for (let i = 0; i < this.movieList[id].data.length; i++) {\r\n                        // get movie main image\r\n                        this.movieList[id].images[i].main.name = this.movieList[id].data[i].main.name;\r\n                        this.movieList[id].images[i].main.url = this.movieList[id].data[i].main.url;\r\n                        // get movie gallery\r\n                        for (let j = 0; j < this.movieList[id].data[i].gallery.length; j++) {\r\n                            this.movieList[id].images[i].gallery.push({\r\n                                id: this.movieList[id].data[i].gallery.length,\r\n                                name: this.movieList[id].data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: this.movieList[id].data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async getUpcoming() {\r\n            this.upcomingList = [];\r\n            this.loading = true;\r\n            const upcomingData = await getDocs(collection(db, 'upcoming'));\r\n            // get movies data\r\n            upcomingData.forEach((doc) => {\r\n                this.upcomingList.push({\r\n                    id: this.upcomingList.length,\r\n                    name: doc.id,\r\n                    uploaded: true,\r\n                    language: doc.data().language,\r\n                    data: doc.data().data,\r\n                    images: [\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[0].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[0].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        },\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[1].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[1].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n            // get movies gallery\r\n            this.upcomingList.forEach((movie) => {\r\n                for (let i = 0; i < movie.data.length; i++) {\r\n                    for (let j = 0; j < movie.data[i].gallery.length; j++) {\r\n                        movie.images[i].gallery.push({\r\n                            id: movie.images[i].gallery.length,\r\n                            name: movie.data[i].gallery[j].name,\r\n                            uploaded: true,\r\n                            image: null,\r\n                            url: movie.data[i].gallery[j].url\r\n                        });\r\n                    }\r\n                    // change date from object to date\r\n                    if (typeof movie.data[i].screeningDate === 'object') {\r\n                        movie.data[i].screeningDate = new Date(movie.data[i].screeningDate.seconds*1000);\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        addUpcoming(movie) {\r\n            this.upcomingList.push(movie);\r\n        },\r\n        async deleteUpcoming(id) {\r\n            this.showUpcomingModal = false;\r\n            this.loading = true;\r\n            if (this.upcomingList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"upcoming\", this.upcomingList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.upcomingList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'upcoming/main/' + this.upcomingList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.upcomingList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.upcomingList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'upcoming/gallery/' + this.upcomingList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.upcomingList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.upcomingList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'upcoming/gallery/' + this.upcomingList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.upcomingList.splice(id, 1);\r\n            for (let i = 0; i < this.upcomingList.length; i++) {\r\n                if (this.upcomingList[i].id !== i) {\r\n                    this.upcomingList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadUpcoming(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                // upload main image (update if was changed)\r\n                if (this.upcomingList[id].images[i].main.image !== null) {\r\n                    try {\r\n                        const mainImageRef = ref(storage, \"upcoming/main/\" + this.upcomingList[id].images[i].main.name);\r\n                        await uploadBytes(mainImageRef, this.upcomingList[id].images[i].main.image).then(async () => {\r\n                            await getDownloadURL(mainImageRef).then((url) => {\r\n                                this.upcomingList[id].data[i].main.url = url;\r\n                            });\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(\"Error uploading image: \", e);\r\n                    }\r\n                }\r\n                // delete images from gallery\r\n                if (this.upcomingList[id].images[i].deleted.length !== 0) {\r\n                    for (let j = 0; j < this.upcomingList[id].images[i].deleted.length; j++) {\r\n                        const delRef = ref(storage, \"upcoming/gallery/\" + this.upcomingList[id].images[i].deleted[j]);\r\n                        await deleteObject(delRef).then(() => {\r\n                            this.upcomingList[id].images[i].deleted.splice(j, 1);\r\n                        }).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                }\r\n                // upload images\r\n                for (let j = 0; j < this.upcomingList[id].images[i].gallery.length; j++) {\r\n                    if (this.upcomingList[id].images[i].gallery[j].image !== null) {\r\n                        try {\r\n                            const galleryRef = ref(storage, \"upcoming/gallery/\" + this.upcomingList[id].images[i].gallery[j].name);\r\n                            await uploadBytes(galleryRef, this.upcomingList[id].images[i].gallery[j].image).then(async () => {\r\n                                await getDownloadURL(galleryRef).then((url) => {\r\n                                    this.upcomingList[id].data[i].gallery[j].url = url;\r\n                                });\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(\"Error uploading image: \", e);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.upcomingList[id].data.length; i++) {\r\n                for (let j = 0; j < this.upcomingList[id].data[i].gallery.length; j++) {\r\n                    if (this.upcomingList[id].data[i].gallery[j].url !== null && j === this.upcomingList[id].data[i].gallery.length-1 && i === this.upcomingList[id].data.length-1) {\r\n                        this.uploadUpcomingData(id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async uploadUpcomingData(id) {\r\n            const docData = {\r\n                language: this.upcomingList[id].language,\r\n                data: this.upcomingList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"upcoming\", this.upcomingList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        },\r\n        async resetUpcoming(id) {\r\n            this.loading = true;\r\n            if (this.upcomingList[id].uploaded) {\r\n                for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                    this.upcomingList[id].images[i].main.name = null;\r\n                    this.upcomingList[id].images[i].main.image = null;\r\n                    this.upcomingList[id].images[i].main.url = null;\r\n                    this.upcomingList[id].images[i].gallery = [];\r\n                    this.upcomingList[id].images[i].deleted = [];\r\n                }\r\n                const docRef = doc(db, \"upcoming\", this.upcomingList[id].name);\r\n                // get movie data\r\n                const docSnap = await getDoc(docRef);\r\n                if (docSnap.exists()) {\r\n                    this.upcomingList[id].data = docSnap.data().data;\r\n                    for (let i = 0; i < this.upcomingList[id].data.length; i++) {\r\n                        if (typeof this.upcomingList[id].data[i].date === 'object') {\r\n                            this.upcomingList[id].data[i].date = new Date(this.upcomingList[id].data[i].date.seconds*1000);\r\n                        }\r\n                        // get movie main image\r\n                        this.upcomingList[id].images[i].main.name = this.upcomingList[id].data[i].main.name;\r\n                        this.upcomingList[id].images[i].main.url = this.upcomingList[id].data[i].main.url;\r\n                        // get movie gallery\r\n                        for (let j = 0; j < this.upcomingList[id].data[i].gallery.length; j++) {\r\n                            this.upcomingList[id].images[i].gallery.push({\r\n                                id: this.upcomingList[id].data[i].gallery.length,\r\n                                name: this.upcomingList[id].data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: this.upcomingList[id].data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.loading = false;\r\n        }\r\n    }\r\n})","import { defineStore } from 'pinia';\r\nimport {collection, deleteDoc, doc, getDocs, setDoc} from \"firebase/firestore\";\r\nimport {db} from \"@/firebase/firebase\";\r\n\r\n\r\nexport const useScheduleStore = defineStore({\r\n    id: 'Schedule',\r\n    state: () => ({\r\n        loading: false,\r\n        eventDate: null,\r\n        selectedCinema: null,\r\n        selectedHall: null,\r\n        selectedMovie: null,\r\n        moviePrice: null,\r\n        scheduledEvents: []\r\n    }),\r\n    actions: {\r\n        async getSchedule() {\r\n            this.loading = true;\r\n            this.scheduledEvents = [];\r\n            const scheduleData = await getDocs(collection(db, 'schedule'));\r\n            scheduleData.forEach((doc) => {\r\n                this.scheduledEvents.push({\r\n                    id: this.scheduledEvents.length,\r\n                    name: doc.id,\r\n                    title: doc.data().title,\r\n                    start: doc.data().start,\r\n                    end: doc.data().end,\r\n                    selectedCinema: doc.data().selectedCinema,\r\n                    selectedHall: doc.data().selectedHall,\r\n                    selectedMovie: doc.data().selectedMovie,\r\n                    moviePrice: doc.data().moviePrice\r\n                });\r\n            });\r\n            for (let i = 0; i < this.scheduledEvents.length; i++) {\r\n                if (typeof this.scheduledEvents[i].end === 'object') {\r\n                    this.scheduledEvents[i].end = new Date(this.scheduledEvents[i].end.seconds*1000);\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async deleteEvent(id) {\r\n            this.loading = true;\r\n            await deleteDoc(doc(db, \"schedule\", this.scheduledEvents[id].name));\r\n            this.loading = false;\r\n        },\r\n        async uploadEvent(id) {\r\n            this.loading = true;\r\n            const eventData = {\r\n                title: `${this.scheduledEvents[id].selectedCinema} - ${this.scheduledEvents[id].selectedMovie}`,\r\n                start: this.scheduledEvents[id].start,\r\n                end: this.scheduledEvents[id].end,\r\n                selectedCinema: this.scheduledEvents[id].selectedCinema,\r\n                selectedHall: this.scheduledEvents[id].selectedHall,\r\n                selectedMovie: this.scheduledEvents[id].selectedMovie,\r\n                moviePrice: this.scheduledEvents[id].moviePrice\r\n            }\r\n            await setDoc(doc(db, \"schedule\", this.scheduledEvents[id].name), eventData).then(() => {\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n})","<template>\r\n  <div class=\"page\">\r\n    <div class=\"container\" v-if=\"eventId !== null\">\r\n      <div class=\"event\">\r\n        <div class=\"event__info\">\r\n          <img class=\"event__info-img\"\r\n               :src=\"movieStore.movieList[movieId].data[mainStore.currentLanguage.index].main.url\"\r\n               alt=\"\" v-if=\"movieId !== null\"\r\n          >\r\n          <div class=\"page__ad-vert\" />\r\n        </div>\r\n\r\n        <div class=\"event__booking\" v-if=\"movieId !== null && cinemaId !== null && hallId !== null\">\r\n          <h2>{{ movieStore.movieList[movieId].data[mainStore.currentLanguage.index].title }}</h2>\r\n          <div class=\"event__booking-showcase\">\r\n            <div class=\"event__booking-info\">\r\n              <p>{{ displayDate(scheduleStore.scheduledEvents[eventId].start) }}</p>\r\n              <p>{{ cinemaStore.cinemaList[cinemaId].halls[hallId].data[mainStore.currentLanguage.index].title }}</p>\r\n              <p>Price: {{ scheduleStore.scheduledEvents[eventId].moviePrice }}</p>\r\n            </div>\r\n            <div class=\"seat-example\" v-for=\"(value, key) in seatStates\" :key=\"key\">\r\n              <div class=\"seat\" :style=\"{'backgroundColor': value.color}\" />\r\n              <div class=\"text\">{{ value.text }}</div>\r\n            </div>\r\n            <div class=\"event__booking-order\">\r\n              <span>Your order: </span>\r\n              <span>Tickets: {{ tickets }}</span>\r\n              <span>Price: {{ price }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"event__booking-screen\" />\r\n\r\n          <div class=\"event__booking-seats\">\r\n            <div class=\"row\" v-for=\"(row, index) in hall\" :key=\"index\">\r\n              <p>Row {{ index+1 }}</p>\r\n              <div class=\"seats\">\r\n                <div class=\"seat\" v-for=\"seat in row\" :key=\"seat.id\" :style=\"{'backgroundColor': seatType(seat)}\" @click=\"selectSeat(index+1, seat.id)\">\r\n                  <p>{{ seat.id }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"event__booking-buttons\">\r\n            <button class=\"btn btn-outline-light btn-lg mr-3\" @click=\"reserveTickets\">Reserve</button>\r\n            <button class=\"btn btn-outline-success btn-lg\" @click=\"buyTickets\">Buy</button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"page__notfound\" v-else>\r\n      <div class=\"container\">\r\n        <h2>Event not found</h2>\r\n        <router-link to=\"/schedule\">\r\n          Go back\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {useMainStore} from \"@/stores/main\";\r\nimport {useScheduleStore} from \"@/stores/schedule\";\r\nimport {useCinemaStore} from \"@/stores/cinemas\";\r\nimport {useMovieStore} from \"@/stores/movies\";\r\nimport {computed, onBeforeMount, ref} from \"vue\";\r\nimport {useAuthStore} from \"@/stores/auth\";\r\n\r\n\r\nconst props = defineProps(['id']);\r\nconst hall = ref([]);\r\n\r\nconst mainStore = useMainStore();\r\nconst scheduleStore = useScheduleStore();\r\nconst cinemaStore = useCinemaStore();\r\nconst movieStore = useMovieStore();\r\nconst authStore = useAuthStore();\r\nscheduleStore.getSchedule();\r\ncinemaStore.getCinemas();\r\nmovieStore.getMovies();\r\n\r\nonBeforeMount(() => {\r\n  mainStore.getBooking(props.id).then((res) => {\r\n    if (res) {\r\n      hall.value = Object.values(res);\r\n    }\r\n    else {\r\n      for (let i = 1; i<=9; i++) {\r\n        hall.value.push([]);\r\n        for (let j = 1; j<=20; j++) {\r\n          hall.value[i-1].push({\r\n            id: j,\r\n            type: 'Available'\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n})\r\n\r\n\r\nconst eventId = computed(() => {\r\n  let eventId = null;\r\n  scheduleStore.scheduledEvents.forEach((event, index) => {\r\n    if (event.name.includes(props.id)) {\r\n      eventId = index;\r\n    }\r\n  });\r\n  return eventId;\r\n});\r\nconst movieId = computed(() => {\r\n  let movieId = null;\r\n  if (eventId.value !== null) {\r\n    movieStore.movieList.forEach((movie, index) => {\r\n      if (movie.data[0].title === scheduleStore.scheduledEvents[eventId.value].selectedMovie) {\r\n        movieId = index;\r\n      }\r\n    });\r\n  }\r\n  return movieId;\r\n});\r\nconst cinemaId = computed(() => {\r\n  let cinemaId = null;\r\n  if (eventId.value !== null) {\r\n    cinemaStore.cinemaList.forEach((cinema, index) => {\r\n      if (cinema.data[0].title === scheduleStore.scheduledEvents[eventId.value].selectedCinema) {\r\n        cinemaId = index;\r\n      }\r\n    });\r\n  }\r\n  return cinemaId;\r\n});\r\nconst hallId = computed(() => {\r\n  let hallId = null;\r\n  if (eventId.value !== null) {\r\n    cinemaStore.cinemaList[cinemaId.value].halls.forEach((hall, index) => {\r\n      if (hall.data[0].title === scheduleStore.scheduledEvents[eventId.value].selectedHall) {\r\n        hallId = index;\r\n      }\r\n    });\r\n  }\r\n  return hallId;\r\n});\r\n\r\nfunction displayDate(date) {\r\n  let dd = new Date(date).getDate();\r\n  let mm = new Date(date).getMonth() + 1;\r\n  let yyyy = new Date(date).getFullYear();\r\n  let hh = new Date(date).getHours();\r\n  let min = new Date(date).getMinutes();\r\n  if (dd < 10) dd = '0' + dd;\r\n  if (mm < 10) mm = '0' + mm;\r\n  return dd + '.' + mm + '.' + yyyy + ', ' + hh + ':' + min;\r\n}\r\n\r\n\r\nconst seatStates = ref([\r\n  {\r\n    text: 'Available',\r\n    color: '#67C23A'\r\n  },\r\n  {\r\n    text: 'Selected',\r\n    color: '#4080D6'\r\n  },\r\n  {\r\n    text: 'Booked',\r\n    color: '#F1C40F'\r\n  },\r\n  {\r\n    text: 'Sold',\r\n    color: '#E74C3C'\r\n  }\r\n]);\r\n\r\nfunction seatType(seat) {\r\n  let color = null;\r\n  seatStates.value.forEach((state) => {\r\n    if (seat.type === state.text) {\r\n      color = state.color;\r\n    }\r\n  });\r\n  return color;\r\n}\r\nconst tickets = ref(0);\r\nconst price = ref(0);\r\nfunction selectSeat(row, seat) {\r\n  if (hall.value[row-1][seat-1].type === 'Available') {\r\n    hall.value[row-1][seat-1].type = 'Selected';\r\n    tickets.value++;\r\n    price.value += scheduleStore.scheduledEvents[eventId.value].moviePrice;\r\n  }\r\n  else if (hall.value[row-1][seat-1].type === 'Selected') {\r\n    hall.value[row-1][seat-1].type = 'Available';\r\n    tickets.value--;\r\n    price.value -= scheduleStore.scheduledEvents[eventId.value].moviePrice;\r\n  }\r\n  console.log(row, seat);\r\n}\r\n\r\nfunction reserveTickets() {\r\n  hall.value.forEach((row) => {\r\n    row.forEach((seat) => {\r\n      if (seat.type === 'Selected') {\r\n        seat.type = 'Booked';\r\n        seat.email = authStore.currentUser.email;\r\n      }\r\n    })\r\n  });\r\n  mainStore.updateBooking(props.id, hall.value)\r\n}\r\nfunction buyTickets() {\r\n  hall.value.forEach((row) => {\r\n    row.forEach((seat) => {\r\n      if (seat.type === 'Selected') {\r\n        seat.type = 'Sold';\r\n        seat.email = authStore.currentUser.email;\r\n      }\r\n    })\r\n  });\r\n  mainStore.updateBooking(props.id, hall.value);\r\n}\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"BookingPage\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page__notfound {\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.event {\r\n  display: flex;\r\n}\r\n.event__info {\r\n  margin-right: 3rem;\r\n}\r\n.event__info-img {\r\n  max-width: 225px;\r\n}\r\n\r\n.page__ad-vert {\r\n  margin-top: 2rem;\r\n  border: 1px solid #FFC107;\r\n  width: 100%;\r\n  height: 400px;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.event__booking {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.event__booking-info {\r\n  margin-right: 1rem;\r\n}\r\n.event__booking-info p {\r\n  margin-bottom: 5px;\r\n}\r\n.event__booking-showcase {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.event__booking-order span {\r\n  margin-left: 2rem;\r\n}\r\n\r\n.seat-example {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-right: 2rem;\r\n}\r\n\r\n.row {\r\n  justify-content: space-between;\r\n}\r\n.seats {\r\n  display: flex;\r\n}\r\n\r\n.seat {\r\n  height: 26px;\r\n  width: 32px;\r\n  margin: 3px;\r\n  font-size: 12px;\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n.seat p {\r\n  margin: 0;\r\n}\r\n\r\n.event__booking-screen {\r\n  max-width: 760px;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  height: 10px;\r\n  margin: 1rem 0 3rem auto;\r\n  box-shadow: 0 3px 10px rgba(255, 255, 255, 0.7);\r\n}\r\n.event__booking-buttons {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 1rem;\r\n}\r\n</style>","import script from \"./BookingPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BookingPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BookingPage.vue?vue&type=style&index=0&id=926599a4&scoped=true&lang=css\"\n\nimport exportComponent from \"S:\\\\Projects\\\\kino-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-926599a4\"]])\n\nexport default __exports__"],"names":["useMainStore","defineStore","id","state","isActive","currentLanguage","selected","index","actions","toggleMenu","this","async","docRef","doc","db","docSnap","getDoc","exists","data","docData","Object","assign","setDoc","useMovieStore","movieList","upcomingList","loading","showModal","showUpcomingModal","uploaded","moviesData","getDocs","collection","forEach","push","length","name","language","images","main","image","url","gallery","deleted","movie","i","j","addMovie","deleteDoc","delRef","ref","storage","deleteObject","catch","error","console","splice","mainImageRef","uploadBytes","then","getDownloadURL","e","galleryRef","uploadMovieData","upcomingData","screeningDate","Date","seconds","addUpcoming","uploadUpcomingData","date","useScheduleStore","eventDate","selectedCinema","selectedHall","selectedMovie","moviePrice","scheduledEvents","scheduleData","title","start","end","eventData","hall","mainStore","scheduleStore","cinemaStore","useCinemaStore","movieStore","authStore","useAuthStore","getSchedule","getCinemas","getMovies","onBeforeMount","getBooking","props","res","value","values","type","eventId","computed","event","includes","movieId","cinemaId","cinemaList","cinema","hallId","halls","displayDate","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","min","getMinutes","seatStates","text","color","seatType","seat","tickets","price","selectSeat","row","log","reserveTickets","email","currentUser","updateBooking","buyTickets","__exports__"],"sourceRoot":""}