{"version":3,"file":"js/upcoming-movie.e94ba618.js","mappings":"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","sources":["webpack://kino-cms/./node_modules/vue-loader/dist/exportHelper.js","webpack://kino-cms/./src/stores/movies.js","webpack://kino-cms/./src/components/GallerySwiper.vue","webpack://kino-cms/./src/components/GallerySwiper.vue?257b","webpack://kino-cms/./src/pages/UpcomingMoviePage.vue","webpack://kino-cms/./src/pages/UpcomingMoviePage.vue?ab3c"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineStore } from 'pinia'\r\nimport { deleteObject, getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { db, storage } from \"@/firebase/firebase\";\r\nimport { collection, doc, getDocs, getDoc, setDoc, deleteDoc } from \"firebase/firestore\";\r\n\r\nexport const useMovieStore = defineStore({\r\n    id: 'Movies',\r\n    state: () => ({\r\n        movieList: [],\r\n        upcomingList: [],\r\n        loading: false,\r\n        showModal: false,\r\n        showUpcomingModal: false,\r\n        uploaded: false\r\n    }),\r\n    actions: {\r\n        async getMovies() {\r\n            this.movieList = [];\r\n            this.loading = true;\r\n            const moviesData = await getDocs(collection(db, 'movies'));\r\n            // get movies data\r\n            moviesData.forEach((doc) => {\r\n                this.movieList.push({\r\n                    id: this.movieList.length,\r\n                    name: doc.id,\r\n                    uploaded: true,\r\n                    language: doc.data().language,\r\n                    data: doc.data().data,\r\n                    images: [\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[0].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[0].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        },\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[1].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[1].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n            // get movies gallery\r\n            this.movieList.forEach((movie) => {\r\n                for (let i = 0; i < movie.data.length; i++) {\r\n                    for (let j = 0; j < movie.data[i].gallery.length; j++) {\r\n                        movie.images[i].gallery.push({\r\n                            id: movie.images[i].gallery.length,\r\n                            name: movie.data[i].gallery[j].name,\r\n                            uploaded: true,\r\n                            image: null,\r\n                            url: movie.data[i].gallery[j].url\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        addMovie(movie) {\r\n            this.movieList.push(movie);\r\n        },\r\n        async deleteMovie(id) {\r\n            this.showModal = false;\r\n            this.loading = true;\r\n            if (this.movieList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"movies\", this.movieList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.movieList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'movies/main/' + this.movieList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.movieList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.movieList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'movies/gallery/' + this.movieList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.movieList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.movieList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'movies/gallery/' + this.movieList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.movieList.splice(id, 1);\r\n            for (let i = 0; i < this.movieList.length; i++) {\r\n                if (this.movieList[i].id !== i) {\r\n                    this.movieList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadMovie(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                // upload main image (update if was changed)\r\n                if (this.movieList[id].images[i].main.image !== null) {\r\n                    try {\r\n                        const mainImageRef = ref(storage, \"movies/main/\" + this.movieList[id].images[i].main.name);\r\n                        await uploadBytes(mainImageRef, this.movieList[id].images[i].main.image).then(async () => {\r\n                            await getDownloadURL(mainImageRef).then((url) => {\r\n                                this.movieList[id].data[i].main.url = url;\r\n                            });\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(\"Error uploading image: \", e);\r\n                    }\r\n                }\r\n                // delete images from gallery\r\n                if (this.movieList[id].images[i].deleted.length !== 0) {\r\n                    for (let j = 0; j < this.movieList[id].images[i].deleted.length; j++) {\r\n                        const delRef = ref(storage, \"movies/gallery/\" + this.movieList[id].images[i].deleted[j]);\r\n                        await deleteObject(delRef).then(() => {\r\n                            this.movieList[id].images[i].deleted.splice(j, 1);\r\n                        }).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                }\r\n                // upload images\r\n                if (this.movieList[id].images[i].gallery.length) {\r\n                    for (let j = 0; j < this.movieList[id].images[i].gallery.length; j++) {\r\n                        if (this.movieList[id].images[i].gallery[j].image !== null) {\r\n                            try {\r\n                                const galleryRef = ref(storage, \"movies/gallery/\" + this.movieList[id].images[i].gallery[j].name);\r\n                                await uploadBytes(galleryRef, this.movieList[id].images[i].gallery[j].image).then(async () => {\r\n                                    await getDownloadURL(galleryRef).then((url) => {\r\n                                        this.movieList[id].data[i].gallery[j].url = url;\r\n                                    });\r\n                                });\r\n                            } catch (e) {\r\n                                console.error(\"Error uploading image: \", e);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.movieList[id].data.length; i++) {\r\n                for (let j = 0; j < this.movieList[id].data[i].gallery.length; j++) {\r\n                    if (this.movieList[id].data[i].gallery[j].url !== null && j === this.movieList[id].data[i].gallery.length-1 && i === this.movieList[id].data.length-1) {\r\n                        this.uploadMovieData(id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async uploadMovieData(id) {\r\n            const docData = {\r\n                language: this.movieList[id].language,\r\n                data: this.movieList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"movies\", this.movieList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        },\r\n        async resetMovie(id) {\r\n            this.loading = true;\r\n            if (this.movieList[id].uploaded) {\r\n                for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                    this.movieList[id].images[i].main.name = null;\r\n                    this.movieList[id].images[i].main.image = null;\r\n                    this.movieList[id].images[i].main.url = null;\r\n                    this.movieList[id].images[i].gallery = [];\r\n                    this.movieList[id].images[i].deleted = [];\r\n                }\r\n                const docRef = doc(db, \"movies\", this.movieList[id].name);\r\n                // get movie data\r\n                const docSnap = await getDoc(docRef);\r\n                if (docSnap.exists()) {\r\n                    this.movieList[id].data = docSnap.data().data;\r\n                    for (let i = 0; i < this.movieList[id].data.length; i++) {\r\n                        // get movie main image\r\n                        this.movieList[id].images[i].main.name = this.movieList[id].data[i].main.name;\r\n                        this.movieList[id].images[i].main.url = this.movieList[id].data[i].main.url;\r\n                        // get movie gallery\r\n                        for (let j = 0; j < this.movieList[id].data[i].gallery.length; j++) {\r\n                            this.movieList[id].images[i].gallery.push({\r\n                                id: this.movieList[id].data[i].gallery.length,\r\n                                name: this.movieList[id].data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: this.movieList[id].data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async getUpcoming() {\r\n            this.upcomingList = [];\r\n            this.loading = true;\r\n            const upcomingData = await getDocs(collection(db, 'upcoming'));\r\n            // get movies data\r\n            upcomingData.forEach((doc) => {\r\n                this.upcomingList.push({\r\n                    id: this.upcomingList.length,\r\n                    name: doc.id,\r\n                    uploaded: true,\r\n                    language: doc.data().language,\r\n                    data: doc.data().data,\r\n                    images: [\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[0].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[0].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        },\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[1].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[1].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n            // get movies gallery\r\n            this.upcomingList.forEach((movie) => {\r\n                for (let i = 0; i < movie.data.length; i++) {\r\n                    for (let j = 0; j < movie.data[i].gallery.length; j++) {\r\n                        movie.images[i].gallery.push({\r\n                            id: movie.images[i].gallery.length,\r\n                            name: movie.data[i].gallery[j].name,\r\n                            uploaded: true,\r\n                            image: null,\r\n                            url: movie.data[i].gallery[j].url\r\n                        });\r\n                    }\r\n                    // change date from object to date\r\n                    if (typeof movie.data[i].screeningDate === 'object') {\r\n                        movie.data[i].screeningDate = new Date(movie.data[i].screeningDate.seconds*1000);\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        addUpcoming(movie) {\r\n            this.upcomingList.push(movie);\r\n        },\r\n        async deleteUpcoming(id) {\r\n            this.showUpcomingModal = false;\r\n            this.loading = true;\r\n            if (this.upcomingList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"upcoming\", this.upcomingList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.upcomingList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'upcoming/main/' + this.upcomingList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.upcomingList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.upcomingList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'upcoming/gallery/' + this.upcomingList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.upcomingList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.upcomingList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'upcoming/gallery/' + this.upcomingList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.upcomingList.splice(id, 1);\r\n            for (let i = 0; i < this.upcomingList.length; i++) {\r\n                if (this.upcomingList[i].id !== i) {\r\n                    this.upcomingList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadUpcoming(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                // upload main image (update if was changed)\r\n                if (this.upcomingList[id].images[i].main.image !== null) {\r\n                    try {\r\n                        const mainImageRef = ref(storage, \"upcoming/main/\" + this.upcomingList[id].images[i].main.name);\r\n                        await uploadBytes(mainImageRef, this.upcomingList[id].images[i].main.image).then(async () => {\r\n                            await getDownloadURL(mainImageRef).then((url) => {\r\n                                this.upcomingList[id].data[i].main.url = url;\r\n                            });\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(\"Error uploading image: \", e);\r\n                    }\r\n                }\r\n                // delete images from gallery\r\n                if (this.upcomingList[id].images[i].deleted.length !== 0) {\r\n                    for (let j = 0; j < this.upcomingList[id].images[i].deleted.length; j++) {\r\n                        const delRef = ref(storage, \"upcoming/gallery/\" + this.upcomingList[id].images[i].deleted[j]);\r\n                        await deleteObject(delRef).then(() => {\r\n                            this.upcomingList[id].images[i].deleted.splice(j, 1);\r\n                        }).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                }\r\n                // upload images\r\n                for (let j = 0; j < this.upcomingList[id].images[i].gallery.length; j++) {\r\n                    if (this.upcomingList[id].images[i].gallery[j].image !== null) {\r\n                        try {\r\n                            const galleryRef = ref(storage, \"upcoming/gallery/\" + this.upcomingList[id].images[i].gallery[j].name);\r\n                            await uploadBytes(galleryRef, this.upcomingList[id].images[i].gallery[j].image).then(async () => {\r\n                                await getDownloadURL(galleryRef).then((url) => {\r\n                                    this.upcomingList[id].data[i].gallery[j].url = url;\r\n                                });\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(\"Error uploading image: \", e);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.upcomingList[id].data.length; i++) {\r\n                for (let j = 0; j < this.upcomingList[id].data[i].gallery.length; j++) {\r\n                    if (this.upcomingList[id].data[i].gallery[j].url !== null && j === this.upcomingList[id].data[i].gallery.length-1 && i === this.upcomingList[id].data.length-1) {\r\n                        this.uploadUpcomingData(id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async uploadUpcomingData(id) {\r\n            const docData = {\r\n                language: this.upcomingList[id].language,\r\n                data: this.upcomingList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"upcoming\", this.upcomingList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        },\r\n        async resetUpcoming(id) {\r\n            this.loading = true;\r\n            if (this.upcomingList[id].uploaded) {\r\n                for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                    this.upcomingList[id].images[i].main.name = null;\r\n                    this.upcomingList[id].images[i].main.image = null;\r\n                    this.upcomingList[id].images[i].main.url = null;\r\n                    this.upcomingList[id].images[i].gallery = [];\r\n                    this.upcomingList[id].images[i].deleted = [];\r\n                }\r\n                const docRef = doc(db, \"upcoming\", this.upcomingList[id].name);\r\n                // get movie data\r\n                const docSnap = await getDoc(docRef);\r\n                if (docSnap.exists()) {\r\n                    this.upcomingList[id].data = docSnap.data().data;\r\n                    for (let i = 0; i < this.upcomingList[id].data.length; i++) {\r\n                        if (typeof this.upcomingList[id].data[i].date === 'object') {\r\n                            this.upcomingList[id].data[i].date = new Date(this.upcomingList[id].data[i].date.seconds*1000);\r\n                        }\r\n                        // get movie main image\r\n                        this.upcomingList[id].images[i].main.name = this.upcomingList[id].data[i].main.name;\r\n                        this.upcomingList[id].images[i].main.url = this.upcomingList[id].data[i].main.url;\r\n                        // get movie gallery\r\n                        for (let j = 0; j < this.upcomingList[id].data[i].gallery.length; j++) {\r\n                            this.upcomingList[id].images[i].gallery.push({\r\n                                id: this.upcomingList[id].data[i].gallery.length,\r\n                                name: this.upcomingList[id].data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: this.upcomingList[id].data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.loading = false;\r\n        }\r\n    }\r\n})","<template>\r\n  <div class=\"gallery\">\r\n    <h2 class=\"text-center\">{{ $t('gallery') }}</h2>\r\n    <swiper\r\n        grab-cursor\r\n        :slides-per-view=\"1\"\r\n        :modules=\"modules\"\r\n        :pagination=\"{ clickable: true }\"\r\n        :autoplay=\"{ delay: 4000, disableOnInteraction: false }\"\r\n        :navigation=\"true\"\r\n    >\r\n      <swiper-slide v-for=\"(image, index) in gallery\" :key=\"index\">\r\n        <img :src=\"image.url\" alt=\"\">\r\n      </swiper-slide>\r\n    </swiper>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref} from \"vue\";\r\n// Import Swiper Vue.js components\r\nimport { Swiper, SwiperSlide } from 'swiper/vue';\r\nimport { Pagination, Autoplay, Navigation } from 'swiper';\r\n// Import Swiper styles\r\nimport 'swiper/css';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/navigation';\r\n\r\n\r\nconst modules = ref([Pagination, Autoplay, Navigation]);\r\ndefineProps(['gallery']);\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GallerySwiper\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nimg {\r\n  width: 100%;\r\n}\r\n</style>","import script from \"./GallerySwiper.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GallerySwiper.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GallerySwiper.vue?vue&type=style&index=0&id=3c84ac43&scoped=true&lang=css\"\n\nimport exportComponent from \"S:\\\\Projects\\\\kino-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3c84ac43\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"page\">\r\n    <div class=\"page__trailer\" v-if=\"trailer !== null\">\r\n      <iframe class=\"page__trailer\"\r\n              :src=\"trailer\" allowfullscreen\r\n              title=\"YouTube video player\" frameborder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n      />\r\n    </div>\r\n    <div class=\"container\" v-if=\"id !== null\">\r\n      <div class=\"movie\">\r\n        <img class=\"movie__img\" :src=\"image\" alt=\"\">\r\n        <div class=\"movie__content\">\r\n          <h2> {{ name }} </h2>\r\n          <p>{{ description }}</p>\r\n          <GallerySwiper\r\n              v-if=\"gallery.length\"\r\n              :gallery=\"gallery\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"page__ad-horizontal\" />\r\n    </div>\r\n    <div class=\"page__notfound\" v-else>\r\n      <div class=\"container\">\r\n        <h2>Movie not found</h2>\r\n        <router-link to=\"/upcoming\">Go back</router-link>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {computed} from \"vue\";\r\nimport {useMovieStore} from \"@/stores/movies\";\r\nimport {useMainStore} from \"@/stores/main\";\r\nimport GallerySwiper from \"@/components/GallerySwiper\";\r\n\r\n\r\nconst props = defineProps(['title']);\r\nconst mainStore = useMainStore();\r\nconst movieStore = useMovieStore();\r\nmovieStore.getUpcoming();\r\n\r\n\r\nconst id = computed(() => {\r\n  let id = null;\r\n  movieStore.upcomingList.forEach((movie, index) => {\r\n    if (movie.data[0].title.replace(/[^a-zA-Z0-9 ]/g, '').toLowerCase().replace(/\\s/g, '-') === props.title) {\r\n      id = index;\r\n    }\r\n  });\r\n  return id;\r\n});\r\n\r\nconst trailer = computed(() => {\r\n  let link = null;\r\n  if (id.value !== null) {\r\n    if (movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].trailer) {\r\n      if (movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].trailer.includes('youtu.be')) {\r\n        link = movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].trailer.replace('youtu.be', 'www.youtube.com/embed')\r\n      }\r\n      else if (movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].trailer.includes('youtube.com/watch?v=')) {\r\n        link = movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].trailer.replace('watch?v=', 'embed/')\r\n      }\r\n      else {\r\n        link = movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].trailer;\r\n      }\r\n    }\r\n  }\r\n  return link;\r\n});\r\n\r\nconst image = computed(() => {\r\n  let link = null;\r\n  if (id.value !== null) {\r\n    if (movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].main.url) {\r\n      link = movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].main.url;\r\n    }\r\n  }\r\n  return link;\r\n});\r\n\r\nconst name = computed(() => {\r\n  let name = null;\r\n  if (id.value !== null) {\r\n    if (movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].title) {\r\n      name = movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].title;\r\n    }\r\n  }\r\n  return name;\r\n});\r\n\r\nconst description = computed(() => {\r\n  let description = null;\r\n  if (id.value !== null) {\r\n    if (movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].description) {\r\n      description = movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].description;\r\n    }\r\n  }\r\n  return description;\r\n});\r\n\r\nconst gallery = computed(() => {\r\n  let gallery = [];\r\n  if (id.value !== null) {\r\n    gallery = movieStore.upcomingList[id.value].data[mainStore.currentLanguage.index].gallery;\r\n  }\r\n  return gallery;\r\n});\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UpcomingMoviePage\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.page__trailer {\r\n  width: 100%;\r\n  aspect-ratio: 1 / 0.45;\r\n}\r\n.movie {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.movie__img {\r\n  max-width: 400px;\r\n}\r\n\r\n.movie__content {\r\n  margin-left: 3rem;\r\n}\r\n\r\n.gallery {\r\n  max-width: 690px;\r\n}\r\n.page__notfound {\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.page__ad-horizontal {\r\n  width: 80%;\r\n  margin: 2rem auto 1rem;\r\n  height: 100px;\r\n  border: 1px solid wheat;\r\n}\r\n</style>","import script from \"./UpcomingMoviePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpcomingMoviePage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpcomingMoviePage.vue?vue&type=style&index=0&id=aaa64eea&scoped=true&lang=css\"\n\nimport exportComponent from \"S:\\\\Projects\\\\kino-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-aaa64eea\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","useMovieStore","defineStore","id","state","movieList","upcomingList","loading","showModal","showUpcomingModal","uploaded","actions","async","this","moviesData","getDocs","collection","db","forEach","doc","push","length","name","language","data","images","main","image","url","gallery","deleted","movie","i","j","addMovie","deleteDoc","delRef","ref","storage","deleteObject","catch","error","console","splice","mainImageRef","uploadBytes","then","getDownloadURL","e","galleryRef","uploadMovieData","docData","setDoc","docRef","docSnap","getDoc","exists","upcomingData","screeningDate","Date","seconds","addUpcoming","uploadUpcomingData","date","modules","Pagination","Autoplay","Navigation","__exports__","mainStore","useMainStore","movieStore","getUpcoming","computed","index","title","replace","toLowerCase","trailer","link","value","currentLanguage","includes","description"],"sourceRoot":""}