{"version":3,"file":"js/contacts.d8e1099f.js","mappings":"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","sources":["webpack://kino-cms/./src/stores/main.js","webpack://kino-cms/./src/stores/pages.js","webpack://kino-cms/./src/pages/ContactsPage.vue","webpack://kino-cms/./src/pages/ContactsPage.vue?4b36"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport {doc, getDoc, setDoc} from \"firebase/firestore\";\r\nimport {db} from \"@/firebase/firebase\";\r\n\r\n\r\nexport const useMainStore = defineStore({\r\n    id: \"Main\",\r\n    state: () => ({\r\n        isActive: false,\r\n        currentLanguage: {\r\n            selected: 'en',\r\n            index: 0\r\n        },\r\n    }),\r\n    actions: {\r\n        toggleMenu() {\r\n            this.isActive = !this.isActive;\r\n        },\r\n        async getBooking(id) {\r\n            const docRef = doc(db, \"booking\", \"event-\" + id);\r\n            const docSnap = await getDoc(docRef);\r\n            if (docSnap.exists()) {\r\n                return docSnap.data();\r\n            } else {\r\n                return undefined\r\n            }\r\n        },\r\n        async updateBooking(id, data) {\r\n            const docData = Object.assign({}, data);\r\n            await setDoc(doc(db, \"booking\", 'event-' + id), docData);\r\n        }\r\n    }\r\n});","import {defineStore} from 'pinia';\r\nimport {db, storage} from \"@/firebase/firebase\";\r\nimport {collection, deleteDoc, doc, getDocs, setDoc} from \"firebase/firestore\";\r\nimport {deleteObject, getDownloadURL, ref, uploadBytes} from \"firebase/storage\";\r\n// import {useCinemaStore} from \"@/stores/cinemas\";\r\n\r\n\r\n// const cinemaStore = useCinemaStore();\r\n\r\nexport const usePagesStore = defineStore({\r\n    id: \"Pages\",\r\n    state: () => ({\r\n        loading: false,\r\n        pagesList: [],\r\n        showModal: false,\r\n        uploaded: false\r\n    }),\r\n    actions: {\r\n        async getPages() {\r\n            this.loading = true;\r\n            this.pagesList = [];\r\n            const pagesData = await getDocs(collection(db, 'pages'));\r\n            // get pages data\r\n            pagesData.forEach((doc) => {\r\n                if (doc.id.includes('contacts') || doc.id.includes('home') || doc.id.includes('movies') || doc.id.includes('schedule') || doc.id.includes('upcoming') || doc.id.includes('cinemas') || doc.id.includes('specials') || doc.id.includes('news')) {\r\n                    this.pagesList.push({\r\n                        id: this.pagesList.length,\r\n                        name: doc.id,\r\n                        uploaded: true,\r\n                        creationDate: doc.data().creationDate,\r\n                        status: doc.data().status,\r\n                        language: doc.data().language,\r\n                        routeName: doc.data().routeName,\r\n                        data: doc.data().data,\r\n                    });\r\n                }\r\n                else {\r\n                    this.pagesList.push({\r\n                        id: this.pagesList.length,\r\n                        name: doc.id,\r\n                        uploaded: true,\r\n                        creationDate: doc.data().creationDate,\r\n                        status: doc.data().status,\r\n                        language: doc.data().language,\r\n                        routeName: doc.data().routeName,\r\n                        data: doc.data().data,\r\n                        images: [\r\n                            {\r\n                                main: {\r\n                                    name: doc.data().data[0].main.name,\r\n                                    image: null,\r\n                                    url: doc.data().data[0].main.url,\r\n                                    uploaded: true\r\n                                },\r\n                                gallery: [],\r\n                                deleted: []\r\n                            },\r\n                            {\r\n                                main: {\r\n                                    name: doc.data().data[1].main.name,\r\n                                    image: null,\r\n                                    url: doc.data().data[1].main.url,\r\n                                    uploaded: true\r\n                                },\r\n                                gallery: [],\r\n                                deleted: []\r\n                            }\r\n                        ]\r\n                    });\r\n                }\r\n            });\r\n            this.pagesList.forEach((page) => {\r\n                if (!page.name.includes('page')) {\r\n                    page.id = 'default';\r\n                }\r\n                for (let i = 0; i < page.data.length; i++) {\r\n                    // get cinemas for contacts page\r\n                    // if (page.name.includes('contacts')) {\r\n                    //     if (cinemaStore.cinemaList.length > 0) {\r\n                    //         for (let j = 0; j < cinemaStore.cinemaList.length; j++) {\r\n                    //             page.data[i].cinemas.push({\r\n                    //                 name: cinemaStore.cinemaList[j].name,\r\n                    //                 address: '',\r\n                    //                 coordinate: ''\r\n                    //             });\r\n                    //         }\r\n                    //         // remove dublicates\r\n                    //         const uniqueNames = [];\r\n                    //         page.data[i].cinemas = page.data[i].cinemas.filter(element => {\r\n                    //             const isDuplicate = uniqueNames.includes(element.name);\r\n                    //             if (!isDuplicate) {\r\n                    //                 uniqueNames.push(element.name);\r\n                    //                 return true;\r\n                    //             }\r\n                    //             return false;\r\n                    //         });\r\n                    //         // check if cinemas were deleted\r\n                    //         let result = page.data[i].cinemas.filter(o1 => !cinemaStore.cinemaList.some(o2 => o1.name === o2.name));\r\n                    //         for (let j = 0; j < page.data[i].cinemas.length; j++) {\r\n                    //             if (result.length > 0) {\r\n                    //                 for (let k = 0; k < result.length; k++) {\r\n                    //                     if (page.data[i].cinemas[j].name === result[k].name) {\r\n                    //                         page.data[i].cinemas.splice(j, 1);\r\n                    //                     }\r\n                    //                 }\r\n                    //             }\r\n                    //         }\r\n                    //     }\r\n                    //     else {\r\n                    //         page.data[i].cinemas = [];\r\n                    //     }\r\n                    // }\r\n                    // get pages gallery\r\n                    if (page.data[i].gallery) {\r\n                        for (let j = 0; j < page.data[i].gallery.length; j++) {\r\n                            page.images[i].gallery.push({\r\n                                id: page.images[i].gallery.length,\r\n                                name: page.data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: page.data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        async deletePage(id) {\r\n            this.showModal = false;\r\n            this.loading = true;\r\n            if (this.pagesList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"pages\", this.pagesList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.pagesList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.pagesList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'pages/main/' + this.pagesList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.pagesList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'pages/gallery/' + this.pagesList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.pagesList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'pages/gallery/' + this.pagesList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.pagesList.splice(id, 1);\r\n            for (let i = 0; i < this.pagesList.length; i++) {\r\n                if (this.pagesList[i].id !== i && this.pagesList[i].id !== 'default') {\r\n                    this.pagesList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadPage(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            // upload pages images\r\n            if (this.pagesList[id].images) {\r\n                for (let i = 0; i < this.pagesList[id].images.length; i++) {\r\n                    // upload main image (update if was changed)\r\n                    if (this.pagesList[id].images[i].main.image !== null) {\r\n                        try {\r\n                            const mainRef = ref(storage, \"pages/main/\" + this.pagesList[id].images[i].main.name);\r\n                            await uploadBytes(mainRef, this.pagesList[id].images[i].main.image).then(async () => {\r\n                                await getDownloadURL(mainRef).then((url) => {\r\n                                    this.pagesList[id].data[i].main.url = url;\r\n                                });\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(\"Error uploading image: \", e);\r\n                        }\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.pagesList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, \"pages/gallery/\" + this.pagesList[id].images[i].deleted[j]);\r\n                            await deleteObject(delRef).then(() => {\r\n                                this.pagesList[id].images[i].deleted.splice(j, 1);\r\n                            }).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    // upload images from gallery\r\n                    if (this.pagesList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].gallery.length; j++) {\r\n                            if (this.pagesList[id].images[i].gallery[j].image !== null) {\r\n                                try {\r\n                                    const galleryRef = ref(storage, \"pages/gallery/\" + this.pagesList[id].images[i].gallery[j].name);\r\n                                    await uploadBytes(galleryRef, this.pagesList[id].images[i].gallery[j].image).then(async () => {\r\n                                        await getDownloadURL(galleryRef).then((url) => {\r\n                                            this.pagesList[id].data[i].gallery[j].url = url;\r\n                                        });\r\n                                    });\r\n                                } catch (e) {\r\n                                    console.error(\"Error uploading image: \", e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < this.pagesList[id].data.length; i++) {\r\n                    for (let j = 0; j < this.pagesList[id].data[i].gallery.length; j++) {\r\n                        if (this.pagesList[id].data[i].gallery[j].url !== null && j === this.pagesList[id].data[i].gallery.length-1 && i === this.pagesList[id].data.length-1) {\r\n                            this.uploadPageData(id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.uploadPageData(id);\r\n            }\r\n        },\r\n        async uploadPageData(id) {\r\n            const docData = {\r\n                creationDate: this.pagesList[id].creationDate,\r\n                routeName: this.pagesList[id].routeName,\r\n                status: this.pagesList[id].status,\r\n                language: this.pagesList[id].language,\r\n                data: this.pagesList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"pages\", this.pagesList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        }\r\n    }\r\n})","<template>\r\n  <div class=\"page\">\r\n    <div class=\"container\">\r\n      <h1 class=\"text-center\">Contacts</h1>\r\n      <div class=\"page__content\">\r\n        <div class=\"page__cinemas\">\r\n          <div class=\"cinema\" v-for=\"(cinema) in cinemaStore.cinemaList\" :key=\"cinema.id\">\r\n            <div class=\"cinema__info\">\r\n              <h2>{{ cinema.data[mainStore.currentLanguage.index].title }}</h2>\r\n              <img class=\"cinema__logo\" :src=\"cinema.data[mainStore.currentLanguage.index].logo.url\" alt=\"\">\r\n              <img class=\"cinema__banner\" v-if=\"cinema.data[mainStore.currentLanguage.index].banner.url\" :src=\"cinema.data[mainStore.currentLanguage.index].banner.url\" alt=\"\">\r\n            </div>\r\n            <div class=\"cinema__address\">\r\n              <p>{{ cinemas[cinema.id].address }}</p>\r\n              <iframe :src=\"'https://maps.google.com/maps?q=' + cinemas[cinema.id].coordinate.replace(' ', '') + '&t=&z=15&ie=UTF8&iwloc=&output=embed'\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"page__ad-vert\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {useMainStore} from \"@/stores/main\";\r\nimport {useCinemaStore} from \"@/stores/cinemas\";\r\nimport {usePagesStore} from \"@/stores/pages\";\r\nimport {computed} from \"vue\";\r\n\r\nconst mainStore = useMainStore();\r\nconst cinemaStore = useCinemaStore();\r\nconst pagesStore = usePagesStore();\r\ncinemaStore.getCinemas();\r\n\r\nconst cinemas = computed(() => {\r\n  let cinemas = [];\r\n  pagesStore.pagesList.forEach((page) => {\r\n    if (page.name.includes('contacts')) {\r\n      cinemas = page.data[mainStore.currentLanguage.index].cinemas;\r\n    }\r\n  })\r\n  return cinemas;\r\n})\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ContactsPage\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page__content {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n}\r\n.page__cinemas {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.cinema {\r\n  display: flex;\r\n  align-items: flex-start;\r\n\r\n}\r\n.cinema__info {\r\n  width: calc(40% - 5rem);\r\n  margin-right: 5rem;\r\n}\r\n.cinema__logo,\r\n.cinema__banner {\r\n  width: 100%;\r\n}\r\n\r\n.page__ad-vert {\r\n  display: flex;\r\n  max-width: 200px;\r\n  width: 100%;\r\n  height: 400px;\r\n  border: 1px solid wheat;\r\n  margin-left: 2rem;\r\n}\r\n</style>","import script from \"./ContactsPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ContactsPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ContactsPage.vue?vue&type=style&index=0&id=61e4cc65&scoped=true&lang=css\"\n\nimport exportComponent from \"S:\\\\Projects\\\\kino-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-61e4cc65\"]])\n\nexport default __exports__"],"names":["useMainStore","defineStore","id","state","isActive","currentLanguage","selected","index","actions","toggleMenu","this","async","docRef","doc","db","docSnap","getDoc","exists","data","docData","Object","assign","setDoc","usePagesStore","loading","pagesList","showModal","uploaded","pagesData","getDocs","collection","forEach","includes","push","length","name","creationDate","status","language","routeName","images","main","image","url","gallery","deleted","page","i","j","deleteDoc","delRef","ref","storage","deleteObject","catch","error","console","splice","mainRef","uploadBytes","then","getDownloadURL","e","galleryRef","uploadPageData","mainStore","cinemaStore","useCinemaStore","pagesStore","getCinemas","cinemas","computed","__exports__"],"sourceRoot":""}