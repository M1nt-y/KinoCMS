{"version":3,"file":"js/404.1608a7a5.js","mappings":"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","sources":["webpack://kino-cms/./node_modules/vue-loader/dist/exportHelper.js","webpack://kino-cms/./src/stores/banners.js","webpack://kino-cms/./src/stores/movies.js","webpack://kino-cms/./src/stores/pages.js","webpack://kino-cms/./src/stores/schedule.js","webpack://kino-cms/./src/components/MainSwiper.vue","webpack://kino-cms/./src/components/MainSwiper.vue?80c2","webpack://kino-cms/./src/pages/HomePage.vue","webpack://kino-cms/./src/pages/HomePage.vue?a24f"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineStore } from 'pinia'\r\nimport { deleteObject, getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { db, storage } from \"@/firebase/firebase\";\r\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\r\n\r\nexport const useBannersStore = defineStore({\r\n    id: 'Banners',\r\n    state: () => ({\r\n        movieBanners: {\r\n            data: [],\r\n            banners: [],\r\n            deletedBanners: [],\r\n            rotationSpeed: 0\r\n        },\r\n        background: {\r\n            selected: '',\r\n            banner: {\r\n                name: '',\r\n                url: null\r\n            },\r\n            file: null,\r\n            color: ''\r\n        },\r\n        newsBanners: {\r\n            data: [],\r\n            banners: [],\r\n            deletedBanners: [],\r\n            rotationSpeed: 0\r\n        },\r\n        loading: false\r\n    }),\r\n    actions: {\r\n        async getMovieBanners() {\r\n            this.loading = true;\r\n            this.movieBanners.data = [];\r\n            this.movieBanners.banners = [];\r\n            this.movieBanners.deletedBanners = [];\r\n            const docRef = doc(db, \"banners\", \"movies\");\r\n            // get movie banners data\r\n            const docSnap = await getDoc(docRef);\r\n            if (docSnap.exists()) {\r\n                this.movieBanners.rotationSpeed = docSnap.data().rotationSpeed;\r\n                this.movieBanners.data = docSnap.data().data;\r\n                for (let i = 0; i < this.movieBanners.data.length; i++) {\r\n                    this.movieBanners.banners.push({\r\n                        id: i,\r\n                        uploaded: true,\r\n                        image: null,\r\n                        url: this.movieBanners.data[i].image\r\n                    });\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        deleteMovieBanner(id) {\r\n            if (this.movieBanners.banners[id].uploaded) {\r\n                this.movieBanners.deletedBanners.push(this.movieBanners.data[id].name);\r\n            }\r\n            this.movieBanners.banners.splice(id, 1);\r\n            this.movieBanners.data.splice(id, 1);\r\n            for (let i = 0; i < this.movieBanners.data.length; i++) {\r\n                if (this.movieBanners.data[i].id !== i && this.movieBanners.banners[i].id !== i) {\r\n                    this.movieBanners.data[i].id = this.movieBanners.banners[i].id = i;\r\n                }\r\n            }\r\n        },\r\n        async uploadMovieBanners() {\r\n            this.loading = true;\r\n            // delete banners\r\n            if (this.movieBanners.deletedBanners.length !== 0) {\r\n                for (let i = 0; i < this.movieBanners.deletedBanners.length; i++) {\r\n                    const delRef = ref(storage, \"banners/movies/\" + this.movieBanners.deletedBanners[i]);\r\n                    await deleteObject(delRef).then(() => {\r\n                        this.movieBanners.deletedBanners.splice(i, 1);\r\n                    }).catch((error) => {\r\n                        console.error(error);\r\n                    });\r\n                }\r\n            }\r\n            // upload banners\r\n            for (let i = 0; i < this.movieBanners.banners.length; i++) {\r\n                if (this.movieBanners.banners[i].image !== null) {\r\n                    try {\r\n                        const bannersRef = ref(storage, \"banners/movies/\" + this.movieBanners.data[i].name);\r\n                        await uploadBytes(bannersRef, this.movieBanners.banners[i].image).then(async () => {\r\n                            await getDownloadURL(bannersRef).then((url) => {\r\n                                this.movieBanners.data[i].image = url;\r\n                            });\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(\"Error uploading banners: \", e);\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.movieBanners.data.length; i++) {\r\n                if (i === this.movieBanners.data.length - 1 && this.movieBanners.data[i].image !== null) {\r\n                    this.uploadMoviesData();\r\n                }\r\n            }\r\n        },\r\n        async uploadMoviesData() {\r\n            const docData = {\r\n                data: this.movieBanners.data,\r\n                rotationSpeed: this.movieBanners.rotationSpeed\r\n            }\r\n            await setDoc(doc(db, \"banners\", \"movies\"), docData).then(() => {\r\n                this.loading = false;\r\n            });\r\n        },\r\n        async getBackground() {\r\n            this.loading = true;\r\n            this.background.selected = '';\r\n            this.background.banner.name = '';\r\n            this.background.color = '';\r\n            this.background.banner.image = null;\r\n            this.background.file = null;\r\n            const docRef = doc(db, \"banners\", \"background\");\r\n            const docSnap = await getDoc(docRef);\r\n            if (docSnap.exists()) {\r\n                this.background.selected = docSnap.data().selected;\r\n                this.background.banner = docSnap.data().banner;\r\n                this.background.color = docSnap.data().color;\r\n            }\r\n            else {\r\n                this.background.banner.name = 'banner-' + Date.now();\r\n                this.background.color = '#121212';\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadBackground() {\r\n            this.loading = true;\r\n            if (this.background.file !== null) {\r\n                try {\r\n                    const bannersRef = ref(storage, \"banners/background/\" + this.background.banner.name);\r\n                    await uploadBytes(bannersRef, this.background.file).then(async () => {\r\n                        await getDownloadURL(bannersRef).then((url) => {\r\n                            this.background.banner.url = url;\r\n                            this.uploadBackgrondData();\r\n                        });\r\n                    });\r\n                } catch (e) {\r\n                    console.error(\"Error uploading banners: \", e);\r\n                }\r\n            }\r\n            else {\r\n                this.uploadBackgrondData();\r\n            }\r\n        },\r\n        async uploadBackgrondData() {\r\n            try {\r\n                await setDoc(doc(db, \"banners\", \"background\"), {\r\n                    selected: this.background.selected,\r\n                    banner: this.background.banner,\r\n                    color: this.background.color\r\n                });\r\n            }\r\n            catch (e) {\r\n                console.error(\"Error uploading banners data: \", e);\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async getNewsBanners() {\r\n            this.loading = true;\r\n            this.newsBanners.data = [];\r\n            this.newsBanners.banners = [];\r\n            this.newsBanners.deletedBanners = [];\r\n            const docRef = doc(db, \"banners\", \"news\");\r\n            // get news banners data\r\n            const docSnap = await getDoc(docRef);\r\n            if (docSnap.exists()) {\r\n                this.newsBanners.rotationSpeed = docSnap.data().rotationSpeed;\r\n                this.newsBanners.data = docSnap.data().data;\r\n                for (let i = 0; i < this.newsBanners.data.length; i++) {\r\n                    this.newsBanners.banners.push({\r\n                        id: i,\r\n                        uploaded: true,\r\n                        image: null,\r\n                        url: this.newsBanners.data[i].image\r\n                    });\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        deleteNewsBanner(id) {\r\n            if (this.newsBanners.banners[id].uploaded) {\r\n                this.newsBanners.deletedBanners.push(this.newsBanners.data[id].name);\r\n            }\r\n            this.newsBanners.data.splice(id, 1);\r\n            this.newsBanners.banners.splice(id, 1);\r\n            for (let i = 0; i < this.newsBanners.data.length; i++) {\r\n                if (this.newsBanners.data[i].id !== i && this.newsBanners.banners[i].id !== i) {\r\n                    this.newsBanners.data[i].id = this.newsBanners.banners[i].id = i;\r\n                }\r\n            }\r\n        },\r\n        async uploadNewsBanners() {\r\n            this.loading = true;\r\n            // delete banners\r\n            if (this.newsBanners.deletedBanners.length !== 0) {\r\n                for (let i = 0; i < this.newsBanners.deletedBanners.length; i++) {\r\n                    const delRef = ref(storage, \"banners/news/\" + this.newsBanners.deletedBanners[i]);\r\n                    await deleteObject(delRef).then(() => {\r\n                        this.newsBanners.deletedBanners.splice(i, 1);\r\n                    }).catch((error) => {\r\n                        console.error(error);\r\n                    });\r\n                }\r\n            }\r\n            // upload banners\r\n            for (let i = 0; i < this.newsBanners.banners.length; i++) {\r\n                if (this.newsBanners.banners[i].image !== null) {\r\n                    try {\r\n                        const bannersRef = ref(storage, \"banners/news/\" + this.newsBanners.data[i].name);\r\n                        await uploadBytes(bannersRef, this.newsBanners.banners[i].image).then(async () => {\r\n                            await getDownloadURL(bannersRef).then(async (url) => {\r\n                                this.newsBanners.data[i].image = url;\r\n                            });\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(\"Error uploading banners: \", e);\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.newsBanners.data.length; i++) {\r\n                if (i === this.newsBanners.data.length - 1 && this.newsBanners.data[i].image !== null) {\r\n                    this.uploadNewsData();\r\n                }\r\n            }\r\n        },\r\n        async uploadNewsData() {\r\n            const docData = {\r\n                data: this.newsBanners.data,\r\n                rotationSpeed: this.newsBanners.rotationSpeed\r\n            }\r\n            await setDoc(doc(db, \"banners\", \"news\"), docData).then(() => {\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n})\r\n","import { defineStore } from 'pinia'\r\nimport { deleteObject, getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport { db, storage } from \"@/firebase/firebase\";\r\nimport { collection, doc, getDocs, getDoc, setDoc, deleteDoc } from \"firebase/firestore\";\r\n\r\nexport const useMovieStore = defineStore({\r\n    id: 'Movies',\r\n    state: () => ({\r\n        movieList: [],\r\n        upcomingList: [],\r\n        loading: false,\r\n        showModal: false,\r\n        showUpcomingModal: false,\r\n        uploaded: false\r\n    }),\r\n    actions: {\r\n        async getMovies() {\r\n            this.movieList = [];\r\n            this.loading = true;\r\n            const moviesData = await getDocs(collection(db, 'movies'));\r\n            // get movies data\r\n            moviesData.forEach((doc) => {\r\n                this.movieList.push({\r\n                    id: this.movieList.length,\r\n                    name: doc.id,\r\n                    uploaded: true,\r\n                    language: doc.data().language,\r\n                    data: doc.data().data,\r\n                    images: [\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[0].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[0].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        },\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[1].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[1].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n            // get movies gallery\r\n            this.movieList.forEach((movie) => {\r\n                for (let i = 0; i < movie.data.length; i++) {\r\n                    for (let j = 0; j < movie.data[i].gallery.length; j++) {\r\n                        movie.images[i].gallery.push({\r\n                            id: movie.images[i].gallery.length,\r\n                            name: movie.data[i].gallery[j].name,\r\n                            uploaded: true,\r\n                            image: null,\r\n                            url: movie.data[i].gallery[j].url\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        addMovie(movie) {\r\n            this.movieList.push(movie);\r\n        },\r\n        async deleteMovie(id) {\r\n            this.showModal = false;\r\n            this.loading = true;\r\n            if (this.movieList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"movies\", this.movieList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.movieList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'movies/main/' + this.movieList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.movieList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.movieList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'movies/gallery/' + this.movieList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.movieList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.movieList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'movies/gallery/' + this.movieList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.movieList.splice(id, 1);\r\n            for (let i = 0; i < this.movieList.length; i++) {\r\n                if (this.movieList[i].id !== i) {\r\n                    this.movieList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadMovie(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                // upload main image (update if was changed)\r\n                if (this.movieList[id].images[i].main.image !== null) {\r\n                    try {\r\n                        const mainImageRef = ref(storage, \"movies/main/\" + this.movieList[id].images[i].main.name);\r\n                        await uploadBytes(mainImageRef, this.movieList[id].images[i].main.image).then(async () => {\r\n                            await getDownloadURL(mainImageRef).then((url) => {\r\n                                this.movieList[id].data[i].main.url = url;\r\n                            });\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(\"Error uploading image: \", e);\r\n                    }\r\n                }\r\n                // delete images from gallery\r\n                if (this.movieList[id].images[i].deleted.length !== 0) {\r\n                    for (let j = 0; j < this.movieList[id].images[i].deleted.length; j++) {\r\n                        const delRef = ref(storage, \"movies/gallery/\" + this.movieList[id].images[i].deleted[j]);\r\n                        await deleteObject(delRef).then(() => {\r\n                            this.movieList[id].images[i].deleted.splice(j, 1);\r\n                        }).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                }\r\n                // upload images\r\n                if (this.movieList[id].images[i].gallery.length) {\r\n                    for (let j = 0; j < this.movieList[id].images[i].gallery.length; j++) {\r\n                        if (this.movieList[id].images[i].gallery[j].image !== null) {\r\n                            try {\r\n                                const galleryRef = ref(storage, \"movies/gallery/\" + this.movieList[id].images[i].gallery[j].name);\r\n                                await uploadBytes(galleryRef, this.movieList[id].images[i].gallery[j].image).then(async () => {\r\n                                    await getDownloadURL(galleryRef).then((url) => {\r\n                                        this.movieList[id].data[i].gallery[j].url = url;\r\n                                    });\r\n                                });\r\n                            } catch (e) {\r\n                                console.error(\"Error uploading image: \", e);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.movieList[id].data.length; i++) {\r\n                for (let j = 0; j < this.movieList[id].data[i].gallery.length; j++) {\r\n                    if (this.movieList[id].data[i].gallery[j].url !== null && j === this.movieList[id].data[i].gallery.length-1 && i === this.movieList[id].data.length-1) {\r\n                        this.uploadMovieData(id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async uploadMovieData(id) {\r\n            const docData = {\r\n                language: this.movieList[id].language,\r\n                data: this.movieList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"movies\", this.movieList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        },\r\n        async resetMovie(id) {\r\n            this.loading = true;\r\n            if (this.movieList[id].uploaded) {\r\n                for (let i = 0; i < this.movieList[id].images.length; i++) {\r\n                    this.movieList[id].images[i].main.name = null;\r\n                    this.movieList[id].images[i].main.image = null;\r\n                    this.movieList[id].images[i].main.url = null;\r\n                    this.movieList[id].images[i].gallery = [];\r\n                    this.movieList[id].images[i].deleted = [];\r\n                }\r\n                const docRef = doc(db, \"movies\", this.movieList[id].name);\r\n                // get movie data\r\n                const docSnap = await getDoc(docRef);\r\n                if (docSnap.exists()) {\r\n                    this.movieList[id].data = docSnap.data().data;\r\n                    for (let i = 0; i < this.movieList[id].data.length; i++) {\r\n                        // get movie main image\r\n                        this.movieList[id].images[i].main.name = this.movieList[id].data[i].main.name;\r\n                        this.movieList[id].images[i].main.url = this.movieList[id].data[i].main.url;\r\n                        // get movie gallery\r\n                        for (let j = 0; j < this.movieList[id].data[i].gallery.length; j++) {\r\n                            this.movieList[id].images[i].gallery.push({\r\n                                id: this.movieList[id].data[i].gallery.length,\r\n                                name: this.movieList[id].data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: this.movieList[id].data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async getUpcoming() {\r\n            this.upcomingList = [];\r\n            this.loading = true;\r\n            const upcomingData = await getDocs(collection(db, 'upcoming'));\r\n            // get movies data\r\n            upcomingData.forEach((doc) => {\r\n                this.upcomingList.push({\r\n                    id: this.upcomingList.length,\r\n                    name: doc.id,\r\n                    uploaded: true,\r\n                    language: doc.data().language,\r\n                    data: doc.data().data,\r\n                    images: [\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[0].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[0].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        },\r\n                        {\r\n                            main: {\r\n                                name: doc.data().data[1].main.name,\r\n                                image: null,\r\n                                url: doc.data().data[1].main.url\r\n                            },\r\n                            gallery: [],\r\n                            deleted: []\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n            // get movies gallery\r\n            this.upcomingList.forEach((movie) => {\r\n                for (let i = 0; i < movie.data.length; i++) {\r\n                    for (let j = 0; j < movie.data[i].gallery.length; j++) {\r\n                        movie.images[i].gallery.push({\r\n                            id: movie.images[i].gallery.length,\r\n                            name: movie.data[i].gallery[j].name,\r\n                            uploaded: true,\r\n                            image: null,\r\n                            url: movie.data[i].gallery[j].url\r\n                        });\r\n                    }\r\n                    // change date from object to date\r\n                    if (typeof movie.data[i].screeningDate === 'object') {\r\n                        movie.data[i].screeningDate = new Date(movie.data[i].screeningDate.seconds*1000);\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        addUpcoming(movie) {\r\n            this.upcomingList.push(movie);\r\n        },\r\n        async deleteUpcoming(id) {\r\n            this.showUpcomingModal = false;\r\n            this.loading = true;\r\n            if (this.upcomingList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"upcoming\", this.upcomingList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.upcomingList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'upcoming/main/' + this.upcomingList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.upcomingList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.upcomingList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'upcoming/gallery/' + this.upcomingList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.upcomingList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.upcomingList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'upcoming/gallery/' + this.upcomingList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.upcomingList.splice(id, 1);\r\n            for (let i = 0; i < this.upcomingList.length; i++) {\r\n                if (this.upcomingList[i].id !== i) {\r\n                    this.upcomingList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadUpcoming(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                // upload main image (update if was changed)\r\n                if (this.upcomingList[id].images[i].main.image !== null) {\r\n                    try {\r\n                        const mainImageRef = ref(storage, \"upcoming/main/\" + this.upcomingList[id].images[i].main.name);\r\n                        await uploadBytes(mainImageRef, this.upcomingList[id].images[i].main.image).then(async () => {\r\n                            await getDownloadURL(mainImageRef).then((url) => {\r\n                                this.upcomingList[id].data[i].main.url = url;\r\n                            });\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(\"Error uploading image: \", e);\r\n                    }\r\n                }\r\n                // delete images from gallery\r\n                if (this.upcomingList[id].images[i].deleted.length !== 0) {\r\n                    for (let j = 0; j < this.upcomingList[id].images[i].deleted.length; j++) {\r\n                        const delRef = ref(storage, \"upcoming/gallery/\" + this.upcomingList[id].images[i].deleted[j]);\r\n                        await deleteObject(delRef).then(() => {\r\n                            this.upcomingList[id].images[i].deleted.splice(j, 1);\r\n                        }).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                }\r\n                // upload images\r\n                for (let j = 0; j < this.upcomingList[id].images[i].gallery.length; j++) {\r\n                    if (this.upcomingList[id].images[i].gallery[j].image !== null) {\r\n                        try {\r\n                            const galleryRef = ref(storage, \"upcoming/gallery/\" + this.upcomingList[id].images[i].gallery[j].name);\r\n                            await uploadBytes(galleryRef, this.upcomingList[id].images[i].gallery[j].image).then(async () => {\r\n                                await getDownloadURL(galleryRef).then((url) => {\r\n                                    this.upcomingList[id].data[i].gallery[j].url = url;\r\n                                });\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(\"Error uploading image: \", e);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.upcomingList[id].data.length; i++) {\r\n                for (let j = 0; j < this.upcomingList[id].data[i].gallery.length; j++) {\r\n                    if (this.upcomingList[id].data[i].gallery[j].url !== null && j === this.upcomingList[id].data[i].gallery.length-1 && i === this.upcomingList[id].data.length-1) {\r\n                        this.uploadUpcomingData(id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async uploadUpcomingData(id) {\r\n            const docData = {\r\n                language: this.upcomingList[id].language,\r\n                data: this.upcomingList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"upcoming\", this.upcomingList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        },\r\n        async resetUpcoming(id) {\r\n            this.loading = true;\r\n            if (this.upcomingList[id].uploaded) {\r\n                for (let i = 0; i < this.upcomingList[id].images.length; i++) {\r\n                    this.upcomingList[id].images[i].main.name = null;\r\n                    this.upcomingList[id].images[i].main.image = null;\r\n                    this.upcomingList[id].images[i].main.url = null;\r\n                    this.upcomingList[id].images[i].gallery = [];\r\n                    this.upcomingList[id].images[i].deleted = [];\r\n                }\r\n                const docRef = doc(db, \"upcoming\", this.upcomingList[id].name);\r\n                // get movie data\r\n                const docSnap = await getDoc(docRef);\r\n                if (docSnap.exists()) {\r\n                    this.upcomingList[id].data = docSnap.data().data;\r\n                    for (let i = 0; i < this.upcomingList[id].data.length; i++) {\r\n                        if (typeof this.upcomingList[id].data[i].date === 'object') {\r\n                            this.upcomingList[id].data[i].date = new Date(this.upcomingList[id].data[i].date.seconds*1000);\r\n                        }\r\n                        // get movie main image\r\n                        this.upcomingList[id].images[i].main.name = this.upcomingList[id].data[i].main.name;\r\n                        this.upcomingList[id].images[i].main.url = this.upcomingList[id].data[i].main.url;\r\n                        // get movie gallery\r\n                        for (let j = 0; j < this.upcomingList[id].data[i].gallery.length; j++) {\r\n                            this.upcomingList[id].images[i].gallery.push({\r\n                                id: this.upcomingList[id].data[i].gallery.length,\r\n                                name: this.upcomingList[id].data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: this.upcomingList[id].data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.loading = false;\r\n        }\r\n    }\r\n})","import {defineStore} from 'pinia';\r\nimport {db, storage} from \"@/firebase/firebase\";\r\nimport {collection, deleteDoc, doc, getDocs, setDoc} from \"firebase/firestore\";\r\nimport {deleteObject, getDownloadURL, ref, uploadBytes} from \"firebase/storage\";\r\n// import {useCinemaStore} from \"@/stores/cinemas\";\r\n\r\n\r\n// const cinemaStore = useCinemaStore();\r\n\r\nexport const usePagesStore = defineStore({\r\n    id: \"Pages\",\r\n    state: () => ({\r\n        loading: false,\r\n        pagesList: [],\r\n        showModal: false,\r\n        uploaded: false\r\n    }),\r\n    actions: {\r\n        async getPages() {\r\n            this.loading = true;\r\n            this.pagesList = [];\r\n            const pagesData = await getDocs(collection(db, 'pages'));\r\n            // get pages data\r\n            pagesData.forEach((doc) => {\r\n                if (doc.id.includes('contacts') || doc.id.includes('home') || doc.id.includes('movies') || doc.id.includes('schedule') || doc.id.includes('upcoming') || doc.id.includes('cinemas') || doc.id.includes('specials') || doc.id.includes('news')) {\r\n                    this.pagesList.push({\r\n                        id: this.pagesList.length,\r\n                        name: doc.id,\r\n                        uploaded: true,\r\n                        creationDate: doc.data().creationDate,\r\n                        status: doc.data().status,\r\n                        language: doc.data().language,\r\n                        routeName: doc.data().routeName,\r\n                        data: doc.data().data,\r\n                    });\r\n                }\r\n                else {\r\n                    this.pagesList.push({\r\n                        id: this.pagesList.length,\r\n                        name: doc.id,\r\n                        uploaded: true,\r\n                        creationDate: doc.data().creationDate,\r\n                        status: doc.data().status,\r\n                        language: doc.data().language,\r\n                        routeName: doc.data().routeName,\r\n                        data: doc.data().data,\r\n                        images: [\r\n                            {\r\n                                main: {\r\n                                    name: doc.data().data[0].main.name,\r\n                                    image: null,\r\n                                    url: doc.data().data[0].main.url,\r\n                                    uploaded: true\r\n                                },\r\n                                gallery: [],\r\n                                deleted: []\r\n                            },\r\n                            {\r\n                                main: {\r\n                                    name: doc.data().data[1].main.name,\r\n                                    image: null,\r\n                                    url: doc.data().data[1].main.url,\r\n                                    uploaded: true\r\n                                },\r\n                                gallery: [],\r\n                                deleted: []\r\n                            }\r\n                        ]\r\n                    });\r\n                }\r\n            });\r\n            this.pagesList.forEach((page) => {\r\n                if (!page.name.includes('page')) {\r\n                    page.id = 'default';\r\n                }\r\n                for (let i = 0; i < page.data.length; i++) {\r\n                    // get cinemas for contacts page\r\n                    // if (page.name.includes('contacts')) {\r\n                    //     if (cinemaStore.cinemaList.length > 0) {\r\n                    //         for (let j = 0; j < cinemaStore.cinemaList.length; j++) {\r\n                    //             page.data[i].cinemas.push({\r\n                    //                 name: cinemaStore.cinemaList[j].name,\r\n                    //                 address: '',\r\n                    //                 coordinate: ''\r\n                    //             });\r\n                    //         }\r\n                    //         // remove dublicates\r\n                    //         const uniqueNames = [];\r\n                    //         page.data[i].cinemas = page.data[i].cinemas.filter(element => {\r\n                    //             const isDuplicate = uniqueNames.includes(element.name);\r\n                    //             if (!isDuplicate) {\r\n                    //                 uniqueNames.push(element.name);\r\n                    //                 return true;\r\n                    //             }\r\n                    //             return false;\r\n                    //         });\r\n                    //         // check if cinemas were deleted\r\n                    //         let result = page.data[i].cinemas.filter(o1 => !cinemaStore.cinemaList.some(o2 => o1.name === o2.name));\r\n                    //         for (let j = 0; j < page.data[i].cinemas.length; j++) {\r\n                    //             if (result.length > 0) {\r\n                    //                 for (let k = 0; k < result.length; k++) {\r\n                    //                     if (page.data[i].cinemas[j].name === result[k].name) {\r\n                    //                         page.data[i].cinemas.splice(j, 1);\r\n                    //                     }\r\n                    //                 }\r\n                    //             }\r\n                    //         }\r\n                    //     }\r\n                    //     else {\r\n                    //         page.data[i].cinemas = [];\r\n                    //     }\r\n                    // }\r\n                    // get pages gallery\r\n                    if (page.data[i].gallery) {\r\n                        for (let j = 0; j < page.data[i].gallery.length; j++) {\r\n                            page.images[i].gallery.push({\r\n                                id: page.images[i].gallery.length,\r\n                                name: page.data[i].gallery[j].name,\r\n                                uploaded: true,\r\n                                image: null,\r\n                                url: page.data[i].gallery[j].url\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.loading = false;\r\n        },\r\n        async deletePage(id) {\r\n            this.showModal = false;\r\n            this.loading = true;\r\n            if (this.pagesList[id].uploaded) {\r\n                // delete data\r\n                await deleteDoc(doc(db, \"pages\", this.pagesList[id].name));\r\n                // delete images\r\n                for (let i = 0; i < this.pagesList[id].images.length; i++) {\r\n                    // delete main image\r\n                    if (this.pagesList[id].images[i].main.name !== null) {\r\n                        const delRef = ref(storage, 'pages/main/' + this.pagesList[id].images[i].main.name);\r\n                        await deleteObject(delRef).catch((error) => {\r\n                            console.error(error);\r\n                        });\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.pagesList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].gallery.length; j++) {\r\n                            const delRef = ref(storage, 'pages/gallery/' + this.pagesList[id].images[i].gallery[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    if (this.pagesList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, 'pages/gallery/' + this.pagesList[id].images[i].deleted[j].name);\r\n                            await deleteObject(delRef).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.pagesList.splice(id, 1);\r\n            for (let i = 0; i < this.pagesList.length; i++) {\r\n                if (this.pagesList[i].id !== i && this.pagesList[i].id !== 'default') {\r\n                    this.pagesList[i].id = i;\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async uploadPage(id) {\r\n            this.loading = true;\r\n            this.uploaded = false;\r\n            // upload pages images\r\n            if (this.pagesList[id].images) {\r\n                for (let i = 0; i < this.pagesList[id].images.length; i++) {\r\n                    // upload main image (update if was changed)\r\n                    if (this.pagesList[id].images[i].main.image !== null) {\r\n                        try {\r\n                            const mainRef = ref(storage, \"pages/main/\" + this.pagesList[id].images[i].main.name);\r\n                            await uploadBytes(mainRef, this.pagesList[id].images[i].main.image).then(async () => {\r\n                                await getDownloadURL(mainRef).then((url) => {\r\n                                    this.pagesList[id].data[i].main.url = url;\r\n                                });\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(\"Error uploading image: \", e);\r\n                        }\r\n                    }\r\n                    // delete images from gallery\r\n                    if (this.pagesList[id].images[i].deleted.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].deleted.length; j++) {\r\n                            const delRef = ref(storage, \"pages/gallery/\" + this.pagesList[id].images[i].deleted[j]);\r\n                            await deleteObject(delRef).then(() => {\r\n                                this.pagesList[id].images[i].deleted.splice(j, 1);\r\n                            }).catch((error) => {\r\n                                console.error(error);\r\n                            });\r\n                        }\r\n                    }\r\n                    // upload images from gallery\r\n                    if (this.pagesList[id].images[i].gallery.length !== 0) {\r\n                        for (let j = 0; j < this.pagesList[id].images[i].gallery.length; j++) {\r\n                            if (this.pagesList[id].images[i].gallery[j].image !== null) {\r\n                                try {\r\n                                    const galleryRef = ref(storage, \"pages/gallery/\" + this.pagesList[id].images[i].gallery[j].name);\r\n                                    await uploadBytes(galleryRef, this.pagesList[id].images[i].gallery[j].image).then(async () => {\r\n                                        await getDownloadURL(galleryRef).then((url) => {\r\n                                            this.pagesList[id].data[i].gallery[j].url = url;\r\n                                        });\r\n                                    });\r\n                                } catch (e) {\r\n                                    console.error(\"Error uploading image: \", e);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < this.pagesList[id].data.length; i++) {\r\n                    for (let j = 0; j < this.pagesList[id].data[i].gallery.length; j++) {\r\n                        if (this.pagesList[id].data[i].gallery[j].url !== null && j === this.pagesList[id].data[i].gallery.length-1 && i === this.pagesList[id].data.length-1) {\r\n                            this.uploadPageData(id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.uploadPageData(id);\r\n            }\r\n        },\r\n        async uploadPageData(id) {\r\n            const docData = {\r\n                creationDate: this.pagesList[id].creationDate,\r\n                routeName: this.pagesList[id].routeName,\r\n                status: this.pagesList[id].status,\r\n                language: this.pagesList[id].language,\r\n                data: this.pagesList[id].data,\r\n            }\r\n            await setDoc(doc(db, \"pages\", this.pagesList[id].name), docData).then(() => {\r\n                this.loading = false;\r\n                this.uploaded = true;\r\n            });\r\n        }\r\n    }\r\n})","import { defineStore } from 'pinia';\r\nimport {collection, deleteDoc, doc, getDocs, setDoc} from \"firebase/firestore\";\r\nimport {db} from \"@/firebase/firebase\";\r\n\r\n\r\nexport const useScheduleStore = defineStore({\r\n    id: 'Schedule',\r\n    state: () => ({\r\n        loading: false,\r\n        eventDate: null,\r\n        selectedCinema: null,\r\n        selectedHall: null,\r\n        selectedMovie: null,\r\n        moviePrice: null,\r\n        scheduledEvents: []\r\n    }),\r\n    actions: {\r\n        async getSchedule() {\r\n            this.loading = true;\r\n            this.scheduledEvents = [];\r\n            const scheduleData = await getDocs(collection(db, 'schedule'));\r\n            scheduleData.forEach((doc) => {\r\n                this.scheduledEvents.push({\r\n                    id: this.scheduledEvents.length,\r\n                    name: doc.id,\r\n                    title: doc.data().title,\r\n                    start: doc.data().start,\r\n                    end: doc.data().end,\r\n                    selectedCinema: doc.data().selectedCinema,\r\n                    selectedHall: doc.data().selectedHall,\r\n                    selectedMovie: doc.data().selectedMovie,\r\n                    moviePrice: doc.data().moviePrice\r\n                });\r\n            });\r\n            for (let i = 0; i < this.scheduledEvents.length; i++) {\r\n                if (typeof this.scheduledEvents[i].end === 'object') {\r\n                    this.scheduledEvents[i].end = new Date(this.scheduledEvents[i].end.seconds*1000);\r\n                }\r\n            }\r\n            this.loading = false;\r\n        },\r\n        async deleteEvent(id) {\r\n            this.loading = true;\r\n            await deleteDoc(doc(db, \"schedule\", this.scheduledEvents[id].name));\r\n            this.loading = false;\r\n        },\r\n        async uploadEvent(id) {\r\n            this.loading = true;\r\n            const eventData = {\r\n                title: `${this.scheduledEvents[id].selectedCinema} - ${this.scheduledEvents[id].selectedMovie}`,\r\n                start: this.scheduledEvents[id].start,\r\n                end: this.scheduledEvents[id].end,\r\n                selectedCinema: this.scheduledEvents[id].selectedCinema,\r\n                selectedHall: this.scheduledEvents[id].selectedHall,\r\n                selectedMovie: this.scheduledEvents[id].selectedMovie,\r\n                moviePrice: this.scheduledEvents[id].moviePrice\r\n            }\r\n            await setDoc(doc(db, \"schedule\", this.scheduledEvents[id].name), eventData).then(() => {\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n})","<template>\r\n  <div class=\"container\">\r\n    <swiper\r\n        :slides-per-view=\"1\"\r\n        :modules=\"modules\"\r\n        grab-cursor\r\n        :autoplay=\"{ delay: rotation*1000, disableOnInteraction: false }\"\r\n    >\r\n      <swiper-slide v-for=\"banner in gallery\" :key=\"banner.id\">\r\n        <router-link :to=\"banner.url\">\r\n          <img :src=\"banner.image\" alt=\"\">\r\n          <div class=\"movie-info__container\" v-if=\"banner.title\">\r\n            <h1>{{ banner.title }}</h1>\r\n          </div>\r\n        </router-link>\r\n      </swiper-slide>\r\n    </swiper>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// Import Swiper Vue.js components\r\nimport { Swiper, SwiperSlide } from 'swiper/vue';\r\nimport { Autoplay } from 'swiper';\r\n// Import Swiper styles\r\nimport 'swiper/css';\r\nimport {ref} from \"vue\";\r\n\r\ndefineProps(['gallery', 'rotation']);\r\n\r\nconst modules = ref([Autoplay])\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MainSwiper\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nimg {\r\n  width: 100%;\r\n}\r\n\r\n.movie-info__container {\r\n  display: flex;\r\n  align-items: center;\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  background: linear-gradient(transparent,rgba(0,0,0,.5) 20%,rgba(0,0,0,.7));\r\n  color: #FFFFFF;\r\n\r\n  padding-block: 2rem;\r\n  padding-inline: 2rem;\r\n}\r\n\r\n</style>","import script from \"./MainSwiper.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MainSwiper.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MainSwiper.vue?vue&type=style&index=0&id=7c71c38c&scoped=true&lang=css\"\n\nimport exportComponent from \"S:\\\\Projects\\\\kino-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7c71c38c\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"page\">\r\n    <MainSwiper\r\n        :gallery=\"bannersStore.movieBanners.data\"\r\n        :rotation=\"bannersStore.movieBanners.rotationSpeed\"\r\n    />\r\n\r\n    <div class=\"container\" v-if=\"todayMovies.length > 0\">\r\n      <h2 class=\"text-center mt-2 mb-2\">{{ $t('today') }}</h2>\r\n      <div class=\"movies mb-2\">\r\n        <router-link class=\"movie\" v-for=\"(movie, index) in todayMovies\" :key=\"index\" :to=\"customRoute(movie.data[0].title, 'schedule/')\">\r\n          <img class=\"movie__img\" :src=\"movie.data[mainStore.currentLanguage.index].main.url\" alt=\"\">\r\n          <div class=\"movie__content\">\r\n            <p>{{ movie.data[mainStore.currentLanguage.index].title }}</p>\r\n          </div>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container\" v-if=\"upcomingMovies.length > 0\">\r\n      <h2 class=\"text-center mt-2 mb-2\">{{ $t('soon') }}</h2>\r\n      <div class=\"upcoming mb-2\">\r\n        <router-link class=\"movie\" v-for=\"(movie, index) in upcomingMovies\" :key=\"index\" :to=\"customRoute(movie.data[0].title, 'upcoming/')\">\r\n          <img class=\"movie__img\" :src=\"movie.data[mainStore.currentLanguage.index].main.url\" alt=\"\">\r\n          <div class=\"movie__content\">\r\n            <p>{{ movie.data[mainStore.currentLanguage.index].title }}</p>\r\n            <p class=\"movie__content-date\">{{ displayDate(movie.data[mainStore.currentLanguage.index].screeningDate) }}</p>\r\n          </div>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <h2 class=\"text-center mt-2 mb-2\">News and special offers</h2>\r\n    </div>\r\n    <MainSwiper\r\n        :gallery=\"bannersStore.newsBanners.data\"\r\n        :rotation=\"bannersStore.newsBanners.rotationSpeed\"\r\n    />\r\n    <div class=\"container\">\r\n      <div class=\"page__ad-horizontal\" />\r\n      <p>{{ seoText }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport MainSwiper from \"@/components/MainSwiper\";\r\nimport {useBannersStore} from \"@/stores/banners\";\r\nimport {useMovieStore} from \"@/stores/movies\";\r\nimport {useMainStore} from \"@/stores/main\";\r\nimport {useScheduleStore} from \"@/stores/schedule\";\r\nimport {computed} from \"vue\";\r\nimport {usePagesStore} from \"@/stores/pages\";\r\n\r\n\r\nconst mainStore = useMainStore();\r\nconst bannersStore = useBannersStore();\r\nconst scheduleStore = useScheduleStore();\r\nconst movieStore = useMovieStore();\r\nconst pagesStore = usePagesStore();\r\n\r\nbannersStore.getMovieBanners();\r\nbannersStore.getNewsBanners();\r\nscheduleStore.getSchedule();\r\nmovieStore.getMovies();\r\nmovieStore.getUpcoming();\r\n\r\nconst todayMovies = computed(() => {\r\n  let result = [];\r\n  let date = new Date().setHours(0, 0, 0, 0);\r\n  let today = scheduleStore.scheduledEvents.filter((event) => date === new Date(event.start).setHours(0, 0, 0, 0));\r\n  if (today.length > 0) {\r\n    today.forEach((event) => {\r\n      movieStore.movieList.forEach((movie) => {\r\n        if (movie.data[0].title === event.selectedMovie) {\r\n          result.push(movie)\r\n        }\r\n      })\r\n    });\r\n  }\r\n  return result;\r\n});\r\n\r\nconst upcomingMovies = computed(() => {\r\n  let array = movieStore.upcomingList;\r\n  return array.sort((a,b) => {\r\n    return a.data[mainStore.currentLanguage.index].screeningDate - b.data[mainStore.currentLanguage.index].screeningDate;\r\n  }).slice(0,4);\r\n});\r\n\r\nfunction customRoute(title, route) {\r\n  if (route.includes('schedule')) {\r\n    let name = null;\r\n    scheduleStore.scheduledEvents.forEach((event) => {\r\n      if (event.selectedMovie === title) {\r\n        name = event.name;\r\n      }\r\n    })\r\n    return route + name.replace('event-', '')\r\n  }\r\n  else {\r\n    return route + title.replace(/[^a-zA-Z0-9 ]/g, '').toLowerCase().replace(/\\s/g, '-');\r\n  }\r\n}\r\n\r\nfunction displayDate(date) {\r\n  let dd = new Date(date).getDate();\r\n  let mm = new Date(date).getMonth() + 1;\r\n  let yyyy = new Date(date).getFullYear();\r\n  if (dd < 10) dd = '0' + dd;\r\n  if (mm < 10) mm = '0' + mm;\r\n  return dd + '.' + mm + '.' + yyyy;\r\n}\r\n\r\nconst seoText = computed(() => {\r\n  let text = null;\r\n  pagesStore.pagesList.forEach((page) => {\r\n    if (page.name.includes('home')) {\r\n      text = page.data[mainStore.currentLanguage.index].seoText;\r\n    }\r\n  });\r\n  return text;\r\n})\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"HomePage\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.movies, .upcoming {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.movie {\r\n  position: relative;\r\n  width: calc(25% - 25px);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.movie__img {\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 390px;\r\n}\r\n.movie__content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n.movie__content-date {\r\n  margin: auto 0 0;\r\n}\r\n\r\n.page__ad-horizontal {\r\n  width: 80%;\r\n  height: 120px;\r\n  border: 1px solid wheat;\r\n  margin: 2rem auto;\r\n}\r\n</style>","import script from \"./HomePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomePage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HomePage.vue?vue&type=style&index=0&id=1cc0fbdc&scoped=true&lang=css\"\n\nimport exportComponent from \"S:\\\\Projects\\\\kino-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1cc0fbdc\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","useBannersStore","defineStore","id","state","movieBanners","data","banners","deletedBanners","rotationSpeed","background","selected","banner","name","url","file","color","newsBanners","loading","actions","async","this","docRef","doc","db","docSnap","getDoc","exists","i","length","push","uploaded","image","deleteMovieBanner","splice","delRef","ref","storage","deleteObject","then","catch","error","console","bannersRef","uploadBytes","getDownloadURL","e","uploadMoviesData","docData","setDoc","Date","now","uploadBackgrondData","deleteNewsBanner","uploadNewsData","useMovieStore","movieList","upcomingList","showModal","showUpcomingModal","moviesData","getDocs","collection","forEach","language","images","main","gallery","deleted","movie","j","addMovie","deleteDoc","mainImageRef","galleryRef","uploadMovieData","upcomingData","screeningDate","seconds","addUpcoming","uploadUpcomingData","date","usePagesStore","pagesList","pagesData","includes","creationDate","status","routeName","page","mainRef","uploadPageData","useScheduleStore","eventDate","selectedCinema","selectedHall","selectedMovie","moviePrice","scheduledEvents","scheduleData","title","start","end","eventData","modules","Autoplay","__exports__","mainStore","useMainStore","bannersStore","scheduleStore","movieStore","pagesStore","getMovieBanners","getNewsBanners","getSchedule","getMovies","getUpcoming","todayMovies","computed","result","setHours","today","filter","event","upcomingMovies","array","sort","a","b","currentLanguage","index","slice","customRoute","route","replace","toLowerCase","displayDate","dd","getDate","mm","getMonth","yyyy","getFullYear","seoText","text"],"sourceRoot":""}